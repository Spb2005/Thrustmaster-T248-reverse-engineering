; generated by Component: ARM Compiler 5.05 update 2 (build 169) Tool: ArmCC [4d0f38]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\vk2c23b_io_i2c_dir.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\vk2c23b_io_i2c_dir.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\..\..\Library\CMSIS\Include -I..\..\..\Library\Device\Nuvoton\M451Series\Include -I..\..\..\Library\StdDriver\inc -I..\Bsp -I..\User -I..\lcd_driver -I..\exti_driver -I..\led_driver -I..\touch -I..\dotmatix_lcd -I..\KH -ID:\工作\A工程资料\LCD\抗干扰系列_VK2C\VK2C例程\VK2C23B_TESTCODE\project\VK2C23B_FUNC\Keil\RTE -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.3.0\CMSIS\Include -D__UVISION_VERSION=515 -D_RTE_ --omf_browse=.\obj\vk2c23b_io_i2c_dir.crf ..\lcd_driver\VK2C23B_IO_I2C_DIR.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  delay_nus PROC
;;;54     *******************************************************************************/
;;;55     void delay_nus(unsigned int n)	   
000000  e007              B        |L1.18|
                  |L1.2|
;;;56     {
;;;57     	unsigned char i;
;;;58     	while(n--)
;;;59     	{
;;;60     		i=10;
000002  210a              MOVS     r1,#0xa
;;;61     		while(i--)
000004  e000              B        |L1.8|
                  |L1.6|
;;;62     		{//nop指令根据单片机做相应的修改
;;;63     			__nop();
000006  bf00              NOP      
                  |L1.8|
000008  000a              MOVS     r2,r1                 ;61
00000a  f1a10301          SUB      r3,r1,#1              ;61
00000e  b2d9              UXTB     r1,r3                 ;61
000010  d1f9              BNE      |L1.6|
                  |L1.18|
000012  0002              MOVS     r2,r0                 ;58
000014  f1a00001          SUB      r0,r0,#1              ;58
000018  d1f3              BNE      |L1.2|
;;;64     		}
;;;65     	}
;;;66     }
00001a  4770              BX       lr
;;;67     /*******************************************************************************
                          ENDP

                  delay_nms PROC
;;;73     *******************************************************************************/
;;;74     void delay_nms(unsigned long int n)
00001c  b510              PUSH     {r4,lr}
;;;75     {
00001e  4604              MOV      r4,r0
;;;76     	while(n--)
000020  e003              B        |L1.42|
                  |L1.34|
;;;77     	{
;;;78     		delay_nus(1000);
000022  f44f707a          MOV      r0,#0x3e8
000026  f7fffffe          BL       delay_nus
                  |L1.42|
00002a  0020              MOVS     r0,r4                 ;76
00002c  f1a40401          SUB      r4,r4,#1              ;76
000030  d1f7              BNE      |L1.34|
;;;79     	}
;;;80     }
000032  bd10              POP      {r4,pc}
;;;81     /*******************************************************************************
                          ENDP

                  VK2C23B_I2CStart PROC
;;;87     *******************************************************************************/
;;;88     void VK2C23B_I2CStart( void )
000034  b500              PUSH     {lr}
;;;89     {
;;;90       VK2C23B_SCL_H();
000036  2001              MOVS     r0,#1
000038  49f7              LDR      r1,|L1.1048|
00003a  6008              STR      r0,[r1,#0]
;;;91       VK2C23B_SDA_H();
00003c  49f6              LDR      r1,|L1.1048|
00003e  3928              SUBS     r1,r1,#0x28
000040  6008              STR      r0,[r1,#0]
;;;92       delay_nus(VK2C23B_CLK);
000042  200a              MOVS     r0,#0xa
000044  f7fffffe          BL       delay_nus
;;;93       VK2C23B_SDA_L();
000048  2000              MOVS     r0,#0
00004a  49f3              LDR      r1,|L1.1048|
00004c  3928              SUBS     r1,r1,#0x28
00004e  6008              STR      r0,[r1,#0]
;;;94       delay_nus(VK2C23B_CLK);
000050  200a              MOVS     r0,#0xa
000052  f7fffffe          BL       delay_nus
;;;95     }
000056  bd00              POP      {pc}
;;;96     /*******************************************************************************
                          ENDP

                  VK2C23B_I2CStop PROC
;;;102    *******************************************************************************/
;;;103    void VK2C23B_I2CStop( void )
000058  b500              PUSH     {lr}
;;;104    {
;;;105      VK2C23B_SCL_H();
00005a  2001              MOVS     r0,#1
00005c  49ee              LDR      r1,|L1.1048|
00005e  6008              STR      r0,[r1,#0]
;;;106      VK2C23B_SDA_L();
000060  2000              MOVS     r0,#0
000062  49ed              LDR      r1,|L1.1048|
000064  3928              SUBS     r1,r1,#0x28
000066  6008              STR      r0,[r1,#0]
;;;107      delay_nus(VK2C23B_CLK);
000068  200a              MOVS     r0,#0xa
00006a  f7fffffe          BL       delay_nus
;;;108      VK2C23B_SDA_H();
00006e  2001              MOVS     r0,#1
000070  49e9              LDR      r1,|L1.1048|
000072  3928              SUBS     r1,r1,#0x28
000074  6008              STR      r0,[r1,#0]
;;;109      delay_nus(VK2C23B_CLK);
000076  200a              MOVS     r0,#0xa
000078  f7fffffe          BL       delay_nus
;;;110    }
00007c  bd00              POP      {pc}
;;;111    /*******************************************************************************
                          ENDP

                  VK2C23B_I2CSlaveAck PROC
;;;117    *******************************************************************************/
;;;118    unsigned char VK2C23B_I2CSlaveAck( void )
00007e  b570              PUSH     {r4-r6,lr}
;;;119    {
;;;120      unsigned int TimeOut;
;;;121      unsigned char RetValue;
;;;122    	
;;;123    	VK2C23B_SET_SDA_IN();
000080  2200              MOVS     r2,#0
000082  2120              MOVS     r1,#0x20
000084  48e5              LDR      r0,|L1.1052|
000086  f7fffffe          BL       GPIO_SetMode
;;;124    //	VK2C23B_SDA_H();	
;;;125    	VK2C23B_SDA_L();	//SDA脚设为输入后，有些单片机需送1，有些单片机需送0
00008a  2000              MOVS     r0,#0
00008c  49e2              LDR      r1,|L1.1048|
00008e  3928              SUBS     r1,r1,#0x28
000090  6008              STR      r0,[r1,#0]
;;;126      VK2C23B_SCL_L();
000092  49e1              LDR      r1,|L1.1048|
000094  6008              STR      r0,[r1,#0]
;;;127      delay_nus(VK2C23B_CLK);
000096  200a              MOVS     r0,#0xa
000098  f7fffffe          BL       delay_nus
;;;128      VK2C23B_SCL_H();//第9个sclk上升沿
00009c  2001              MOVS     r0,#1
00009e  49de              LDR      r1,|L1.1048|
0000a0  6008              STR      r0,[r1,#0]
;;;129      TimeOut = 10000;
0000a2  f2427510          MOV      r5,#0x2710
;;;130      while( TimeOut-- > 0 )
0000a6  e007              B        |L1.184|
                  |L1.168|
;;;131      {
;;;132        if( VK2C23B_GET_SDA()!=0 )//读取ack
0000a8  48db              LDR      r0,|L1.1048|
0000aa  3828              SUBS     r0,r0,#0x28
0000ac  6800              LDR      r0,[r0,#0]
0000ae  b108              CBZ      r0,|L1.180|
;;;133        {
;;;134          RetValue = 1;
0000b0  2401              MOVS     r4,#1
0000b2  e001              B        |L1.184|
                  |L1.180|
;;;135        }
;;;136        else
;;;137        {
;;;138          RetValue = 0;
0000b4  2400              MOVS     r4,#0
;;;139          break;
0000b6  e003              B        |L1.192|
                  |L1.184|
0000b8  0028              MOVS     r0,r5                 ;130
0000ba  f1a50501          SUB      r5,r5,#1              ;130
0000be  d1f3              BNE      |L1.168|
                  |L1.192|
0000c0  bf00              NOP      
;;;140        }
;;;141      } 
;;;142    	VK2C23B_SCL_L();
0000c2  2000              MOVS     r0,#0
0000c4  49d4              LDR      r1,|L1.1048|
0000c6  6008              STR      r0,[r1,#0]
;;;143      VK2C23B_SET_SDA_OUT();
0000c8  2201              MOVS     r2,#1
0000ca  2120              MOVS     r1,#0x20
0000cc  48d3              LDR      r0,|L1.1052|
0000ce  f7fffffe          BL       GPIO_SetMode
;;;144      return RetValue;
0000d2  4620              MOV      r0,r4
;;;145    }
0000d4  bd70              POP      {r4-r6,pc}
;;;146    /*******************************************************************************
                          ENDP

                  VK2C23B_I2CSendAck PROC
;;;152    *******************************************************************************/
;;;153    void VK2C23B_I2CSendAck( void )
0000d6  b500              PUSH     {lr}
;;;154    {
;;;155      VK2C23B_SCL_L();
0000d8  2000              MOVS     r0,#0
0000da  49cf              LDR      r1,|L1.1048|
0000dc  6008              STR      r0,[r1,#0]
;;;156      VK2C23B_SDA_L();
0000de  49ce              LDR      r1,|L1.1048|
0000e0  3928              SUBS     r1,r1,#0x28
0000e2  6008              STR      r0,[r1,#0]
;;;157      delay_nus(VK2C23B_CLK*2);
0000e4  2014              MOVS     r0,#0x14
0000e6  f7fffffe          BL       delay_nus
;;;158      VK2C23B_SCL_H();
0000ea  2001              MOVS     r0,#1
0000ec  49ca              LDR      r1,|L1.1048|
0000ee  6008              STR      r0,[r1,#0]
;;;159      delay_nus(VK2C23B_CLK*2);
0000f0  2014              MOVS     r0,#0x14
0000f2  f7fffffe          BL       delay_nus
;;;160      VK2C23B_SCL_L();
0000f6  2000              MOVS     r0,#0
0000f8  49c7              LDR      r1,|L1.1048|
0000fa  6008              STR      r0,[r1,#0]
;;;161      VK2C23B_SDA_H();
0000fc  2001              MOVS     r0,#1
0000fe  49c6              LDR      r1,|L1.1048|
000100  3928              SUBS     r1,r1,#0x28
000102  6008              STR      r0,[r1,#0]
;;;162    }
000104  bd00              POP      {pc}
;;;163    /*******************************************************************************
                          ENDP

                  VK2C23B_I2CSendNAck PROC
;;;169    *******************************************************************************/
;;;170    void VK2C23B_I2CSendNAck( void )
000106  b500              PUSH     {lr}
;;;171    {
;;;172      VK2C23B_SCL_L();
000108  2000              MOVS     r0,#0
00010a  49c3              LDR      r1,|L1.1048|
00010c  6008              STR      r0,[r1,#0]
;;;173      VK2C23B_SDA_H();
00010e  2001              MOVS     r0,#1
000110  49c1              LDR      r1,|L1.1048|
000112  3928              SUBS     r1,r1,#0x28
000114  6008              STR      r0,[r1,#0]
;;;174      delay_nus(VK2C23B_CLK);
000116  200a              MOVS     r0,#0xa
000118  f7fffffe          BL       delay_nus
;;;175      VK2C23B_SCL_H();
00011c  2001              MOVS     r0,#1
00011e  49be              LDR      r1,|L1.1048|
000120  6008              STR      r0,[r1,#0]
;;;176      delay_nus(VK2C23B_CLK);
000122  200a              MOVS     r0,#0xa
000124  f7fffffe          BL       delay_nus
;;;177    }
000128  bd00              POP      {pc}
;;;178    /*******************************************************************************
                          ENDP

                  VK2C23B_I2CWriteByte PROC
;;;184    *******************************************************************************/
;;;185    void VK2C23B_I2CWriteByte( unsigned char byte )
00012a  b530              PUSH     {r4,r5,lr}
;;;186    {
00012c  4604              MOV      r4,r0
;;;187    	unsigned char i=8;
00012e  2508              MOVS     r5,#8
;;;188    	while (i--)
000130  e019              B        |L1.358|
                  |L1.306|
;;;189    	{ 
;;;190    		VK2C23B_SCL_L();
000132  2000              MOVS     r0,#0
000134  49b8              LDR      r1,|L1.1048|
000136  6008              STR      r0,[r1,#0]
;;;191    		if(byte&0x80)
000138  f0040080          AND      r0,r4,#0x80
00013c  b120              CBZ      r0,|L1.328|
;;;192    			VK2C23B_SDA_H();
00013e  2001              MOVS     r0,#1
000140  49b5              LDR      r1,|L1.1048|
000142  3928              SUBS     r1,r1,#0x28
000144  6008              STR      r0,[r1,#0]
000146  e003              B        |L1.336|
                  |L1.328|
;;;193    		else
;;;194    			VK2C23B_SDA_L();
000148  2000              MOVS     r0,#0
00014a  49b3              LDR      r1,|L1.1048|
00014c  3928              SUBS     r1,r1,#0x28
00014e  6008              STR      r0,[r1,#0]
                  |L1.336|
;;;195    		byte<<=1; 
000150  0660              LSLS     r0,r4,#25
000152  0e04              LSRS     r4,r0,#24
;;;196    		delay_nus(VK2C23B_CLK);
000154  200a              MOVS     r0,#0xa
000156  f7fffffe          BL       delay_nus
;;;197    		VK2C23B_SCL_H();     
00015a  2001              MOVS     r0,#1
00015c  49ae              LDR      r1,|L1.1048|
00015e  6008              STR      r0,[r1,#0]
;;;198    		delay_nus(VK2C23B_CLK);
000160  200a              MOVS     r0,#0xa
000162  f7fffffe          BL       delay_nus
                  |L1.358|
000166  0028              MOVS     r0,r5                 ;188
000168  f1a50101          SUB      r1,r5,#1              ;188
00016c  b2cd              UXTB     r5,r1                 ;188
00016e  d1e0              BNE      |L1.306|
;;;199    	}
;;;200    }
000170  bd30              POP      {r4,r5,pc}
;;;201    
                          ENDP

                  WriteCmdVK2C23B PROC
;;;209    *******************************************************************************/
;;;210    unsigned char WriteCmdVK2C23B(unsigned char cmd, unsigned char data )
000172  b570              PUSH     {r4-r6,lr}
;;;211    {
000174  4605              MOV      r5,r0
000176  460c              MOV      r4,r1
;;;212    	VK2C23B_I2CStart();
000178  f7fffffe          BL       VK2C23B_I2CStart
;;;213    
;;;214    	VK2C23B_I2CWriteByte( VK2C23B_ADDR|0x00 );
00017c  207c              MOVS     r0,#0x7c
00017e  f7fffffe          BL       VK2C23B_I2CWriteByte
;;;215    	if( 1 == VK2C23B_I2CSlaveAck() )
000182  f7fffffe          BL       VK2C23B_I2CSlaveAck
000186  2801              CMP      r0,#1
000188  d103              BNE      |L1.402|
;;;216    	{
;;;217    		VK2C23B_I2CStop(); 
00018a  f7fffffe          BL       VK2C23B_I2CStop
;;;218    		return 0;   
00018e  2000              MOVS     r0,#0
                  |L1.400|
;;;219    	}
;;;220    	VK2C23B_I2CWriteByte( cmd );
;;;221    	if( 1 == VK2C23B_I2CSlaveAck() )
;;;222    	{
;;;223    		VK2C23B_I2CStop(); 
;;;224    		return 0;   
;;;225    	}
;;;226    	VK2C23B_I2CWriteByte( data );
;;;227    	if( 1 == VK2C23B_I2CSlaveAck() )
;;;228    	{
;;;229    		VK2C23B_I2CStop(); 
;;;230    		return 0;   
;;;231    	}
;;;232      VK2C23B_I2CStop();
;;;233     
;;;234      return 0;    //返回操作成败标志
;;;235    }
000190  bd70              POP      {r4-r6,pc}
                  |L1.402|
000192  4628              MOV      r0,r5                 ;220
000194  f7fffffe          BL       VK2C23B_I2CWriteByte
000198  f7fffffe          BL       VK2C23B_I2CSlaveAck
00019c  2801              CMP      r0,#1                 ;221
00019e  d103              BNE      |L1.424|
0001a0  f7fffffe          BL       VK2C23B_I2CStop
0001a4  2000              MOVS     r0,#0                 ;224
0001a6  e7f3              B        |L1.400|
                  |L1.424|
0001a8  4620              MOV      r0,r4                 ;226
0001aa  f7fffffe          BL       VK2C23B_I2CWriteByte
0001ae  f7fffffe          BL       VK2C23B_I2CSlaveAck
0001b2  2801              CMP      r0,#1                 ;227
0001b4  d103              BNE      |L1.446|
0001b6  f7fffffe          BL       VK2C23B_I2CStop
0001ba  2000              MOVS     r0,#0                 ;230
0001bc  e7e8              B        |L1.400|
                  |L1.446|
0001be  f7fffffe          BL       VK2C23B_I2CStop
0001c2  2000              MOVS     r0,#0                 ;234
0001c4  e7e4              B        |L1.400|
;;;236    /*******************************************************************************
                          ENDP

                  VK2C23B_I2CRDDat PROC
;;;242    *******************************************************************************/
;;;243    unsigned char VK2C23B_I2CRDDat( void )
0001c6  b570              PUSH     {r4-r6,lr}
;;;244    {
;;;245    	unsigned char i,RetValue,bit;
;;;246    	
;;;247    	VK2C23B_SET_SDA_IN();
0001c8  2200              MOVS     r2,#0
0001ca  2120              MOVS     r1,#0x20
0001cc  4893              LDR      r0,|L1.1052|
0001ce  f7fffffe          BL       GPIO_SetMode
;;;248    // VK2C23B_SDA_H();	
;;;249    	VK2C23B_SDA_L();	//SDA脚设为输入后，有些单片机需送1，有些单片机需送0
0001d2  2000              MOVS     r0,#0
0001d4  4990              LDR      r1,|L1.1048|
0001d6  3928              SUBS     r1,r1,#0x28
0001d8  6008              STR      r0,[r1,#0]
;;;250    	RetValue=0;	
0001da  2500              MOVS     r5,#0
;;;251      for( i=0; i<8; i++ )
0001dc  2400              MOVS     r4,#0
0001de  e018              B        |L1.530|
                  |L1.480|
;;;252      {
;;;253    		VK2C23B_SCL_H(); 
0001e0  2001              MOVS     r0,#1
0001e2  498d              LDR      r1,|L1.1048|
0001e4  6008              STR      r0,[r1,#0]
;;;254        delay_nus(VK2C23B_CLK);
0001e6  200a              MOVS     r0,#0xa
0001e8  f7fffffe          BL       delay_nus
;;;255        if( 1 == VK2C23B_GET_SDA() )
0001ec  488a              LDR      r0,|L1.1048|
0001ee  3828              SUBS     r0,r0,#0x28
0001f0  6800              LDR      r0,[r0,#0]
0001f2  2801              CMP      r0,#1
0001f4  d101              BNE      |L1.506|
;;;256          bit = 0X01;
0001f6  2601              MOVS     r6,#1
0001f8  e000              B        |L1.508|
                  |L1.506|
;;;257        else
;;;258          bit = 0x00;
0001fa  2600              MOVS     r6,#0
                  |L1.508|
;;;259          
;;;260        RetValue = (RetValue<<1)|bit;
0001fc  ea460045          ORR      r0,r6,r5,LSL #1
000200  b2c5              UXTB     r5,r0
;;;261        VK2C23B_SCL_L();
000202  2000              MOVS     r0,#0
000204  4984              LDR      r1,|L1.1048|
000206  6008              STR      r0,[r1,#0]
;;;262        delay_nus(VK2C23B_CLK);
000208  200a              MOVS     r0,#0xa
00020a  f7fffffe          BL       delay_nus
00020e  1c60              ADDS     r0,r4,#1              ;251
000210  b2c4              UXTB     r4,r0                 ;251
                  |L1.530|
000212  2c08              CMP      r4,#8                 ;251
000214  dbe4              BLT      |L1.480|
;;;263    	}
;;;264      VK2C23B_SET_SDA_OUT();
000216  2201              MOVS     r2,#1
000218  2120              MOVS     r1,#0x20
00021a  4880              LDR      r0,|L1.1052|
00021c  f7fffffe          BL       GPIO_SetMode
;;;265      return RetValue;
000220  4628              MOV      r0,r5
;;;266    }
000222  bd70              POP      {r4-r6,pc}
;;;267    /*******************************************************************************
                          ENDP

                  WritenDataVK2C23B PROC
;;;275    *******************************************************************************/
;;;276    unsigned char  WritenDataVK2C23B(unsigned char Addr,unsigned char *Databuf,unsigned char Cnt)
000224  e92d41f0          PUSH     {r4-r8,lr}
;;;277    {
000228  4607              MOV      r7,r0
00022a  460c              MOV      r4,r1
00022c  4616              MOV      r6,r2
;;;278    	unsigned char n;
;;;279    	
;;;280    	//START信号	
;;;281    	VK2C23B_I2CStart(); 									
00022e  f7fffffe          BL       VK2C23B_I2CStart
;;;282    	//SLAVE地址
;;;283    	VK2C23B_I2CWriteByte(VK2C23B_ADDR); 	
000232  207c              MOVS     r0,#0x7c
000234  f7fffffe          BL       VK2C23B_I2CWriteByte
;;;284    	if( 1 == VK2C23B_I2CSlaveAck() )
000238  f7fffffe          BL       VK2C23B_I2CSlaveAck
00023c  2801              CMP      r0,#1
00023e  d104              BNE      |L1.586|
;;;285    	{
;;;286    		VK2C23B_I2CStop();													
000240  f7fffffe          BL       VK2C23B_I2CStop
;;;287    		return 0;										
000244  2000              MOVS     r0,#0
                  |L1.582|
;;;288    	}
;;;289    	//写显示RAM命令
;;;290    	VK2C23B_I2CWriteByte(VK2C23B_RWRAM); 						
;;;291    	if( 1 == VK2C23B_I2CSlaveAck() )
;;;292    	{
;;;293    		VK2C23B_I2CStop();													
;;;294    		return 0;
;;;295    	}
;;;296    	//显示RAM起始地址
;;;297    	VK2C23B_I2CWriteByte(Addr); 						
;;;298    	if( 1 == VK2C23B_I2CSlaveAck() )
;;;299    	{
;;;300    		VK2C23B_I2CStop();													
;;;301    		return 0;
;;;302    	}
;;;303    	//发送Cnt个数据到显示RAM
;;;304    	for(n=0;n<Cnt;n++)
;;;305    	{ 
;;;306    		VK2C23B_I2CWriteByte(*Databuf++);
;;;307    		if( VK2C23B_I2CSlaveAck()==1 )
;;;308    		{
;;;309    			VK2C23B_I2CStop();													
;;;310    			return 0;
;;;311    		}
;;;312    	}
;;;313    	//STOP信号
;;;314    	 VK2C23B_I2CStop();											
;;;315    	 return 0;    
;;;316    }
000246  e8bd81f0          POP      {r4-r8,pc}
                  |L1.586|
00024a  2080              MOVS     r0,#0x80              ;290
00024c  f7fffffe          BL       VK2C23B_I2CWriteByte
000250  f7fffffe          BL       VK2C23B_I2CSlaveAck
000254  2801              CMP      r0,#1                 ;291
000256  d103              BNE      |L1.608|
000258  f7fffffe          BL       VK2C23B_I2CStop
00025c  2000              MOVS     r0,#0                 ;294
00025e  e7f2              B        |L1.582|
                  |L1.608|
000260  4638              MOV      r0,r7                 ;297
000262  f7fffffe          BL       VK2C23B_I2CWriteByte
000266  f7fffffe          BL       VK2C23B_I2CSlaveAck
00026a  2801              CMP      r0,#1                 ;298
00026c  d103              BNE      |L1.630|
00026e  f7fffffe          BL       VK2C23B_I2CStop
000272  2000              MOVS     r0,#0                 ;301
000274  e7e7              B        |L1.582|
                  |L1.630|
000276  2500              MOVS     r5,#0                 ;304
000278  e00d              B        |L1.662|
                  |L1.634|
00027a  f8140b01          LDRB     r0,[r4],#1            ;306
00027e  f7fffffe          BL       VK2C23B_I2CWriteByte
000282  f7fffffe          BL       VK2C23B_I2CSlaveAck
000286  2801              CMP      r0,#1                 ;307
000288  d103              BNE      |L1.658|
00028a  f7fffffe          BL       VK2C23B_I2CStop
00028e  2000              MOVS     r0,#0                 ;310
000290  e7d9              B        |L1.582|
                  |L1.658|
000292  1c68              ADDS     r0,r5,#1              ;304
000294  b2c5              UXTB     r5,r0                 ;304
                  |L1.662|
000296  42b5              CMP      r5,r6                 ;304
000298  dbef              BLT      |L1.634|
00029a  f7fffffe          BL       VK2C23B_I2CStop
00029e  2000              MOVS     r0,#0                 ;315
0002a0  e7d1              B        |L1.582|
;;;317    /*******************************************************************************
                          ENDP

                  ReadnDataVK2C23B PROC
;;;325    *******************************************************************************/
;;;326    unsigned char  ReadnDataVK2C23B(unsigned char Addr,unsigned char *Databuf,unsigned char Cnt)
0002a2  e92d41f0          PUSH     {r4-r8,lr}
;;;327    {
0002a6  4607              MOV      r7,r0
0002a8  460c              MOV      r4,r1
0002aa  4616              MOV      r6,r2
;;;328    	unsigned char n;
;;;329    	
;;;330    	//START信号	
;;;331    	VK2C23B_I2CStart(); 									
0002ac  f7fffffe          BL       VK2C23B_I2CStart
;;;332    	//SLAVE地址写
;;;333    	VK2C23B_I2CWriteByte(VK2C23B_ADDR); 	
0002b0  207c              MOVS     r0,#0x7c
0002b2  f7fffffe          BL       VK2C23B_I2CWriteByte
;;;334    	if( 1 == VK2C23B_I2CSlaveAck() )
0002b6  f7fffffe          BL       VK2C23B_I2CSlaveAck
0002ba  2801              CMP      r0,#1
0002bc  d104              BNE      |L1.712|
;;;335    	{
;;;336    		VK2C23B_I2CStop();													
0002be  f7fffffe          BL       VK2C23B_I2CStop
;;;337    		return 0;										
0002c2  2000              MOVS     r0,#0
                  |L1.708|
;;;338    	}                        
;;;339    	//显示RAM起始地址
;;;340    	VK2C23B_I2CWriteByte(Addr); 						
;;;341    	if( 1 == VK2C23B_I2CSlaveAck() )
;;;342    	{
;;;343    		VK2C23B_I2CStop();													
;;;344    		return 0;
;;;345    	}
;;;346    	
;;;347    	//STOP信号
;;;348    	VK2C23B_I2CStop();	
;;;349    	//START信号	
;;;350    	VK2C23B_I2CStart(); 									
;;;351    	//SLAVE地址读
;;;352    	VK2C23B_I2CWriteByte(VK2C23B_ADDRRD); 	
;;;353    		if( 1 == VK2C23B_I2CSlaveAck() )
;;;354    	{
;;;355    		VK2C23B_I2CStop();													
;;;356    		return 0;										
;;;357    	}  
;;;358    	//读Cnt个数据到显示RAM
;;;359    	for(n=0;n<Cnt-1;n++)
;;;360    	{ 
;;;361    		*Databuf++=VK2C23B_I2CRDDat();
;;;362    		VK2C23B_I2CSendAck();
;;;363    	}
;;;364    	*Databuf++=VK2C23B_I2CRDDat();
;;;365    	VK2C23B_I2CSendNAck();
;;;366    	//STOP信号
;;;367    	VK2C23B_I2CStop();											
;;;368    	 return 0;    
;;;369    }
0002c4  e8bd81f0          POP      {r4-r8,pc}
                  |L1.712|
0002c8  4638              MOV      r0,r7                 ;340
0002ca  f7fffffe          BL       VK2C23B_I2CWriteByte
0002ce  f7fffffe          BL       VK2C23B_I2CSlaveAck
0002d2  2801              CMP      r0,#1                 ;341
0002d4  d103              BNE      |L1.734|
0002d6  f7fffffe          BL       VK2C23B_I2CStop
0002da  2000              MOVS     r0,#0                 ;344
0002dc  e7f2              B        |L1.708|
                  |L1.734|
0002de  f7fffffe          BL       VK2C23B_I2CStop
0002e2  f7fffffe          BL       VK2C23B_I2CStart
0002e6  207d              MOVS     r0,#0x7d              ;352
0002e8  f7fffffe          BL       VK2C23B_I2CWriteByte
0002ec  f7fffffe          BL       VK2C23B_I2CSlaveAck
0002f0  2801              CMP      r0,#1                 ;353
0002f2  d103              BNE      |L1.764|
0002f4  f7fffffe          BL       VK2C23B_I2CStop
0002f8  2000              MOVS     r0,#0                 ;356
0002fa  e7e3              B        |L1.708|
                  |L1.764|
0002fc  2500              MOVS     r5,#0                 ;359
0002fe  e007              B        |L1.784|
                  |L1.768|
000300  f7fffffe          BL       VK2C23B_I2CRDDat
000304  f8040b01          STRB     r0,[r4],#1            ;361
000308  f7fffffe          BL       VK2C23B_I2CSendAck
00030c  1c68              ADDS     r0,r5,#1              ;359
00030e  b2c5              UXTB     r5,r0                 ;359
                  |L1.784|
000310  1e70              SUBS     r0,r6,#1              ;359
000312  42a8              CMP      r0,r5                 ;359
000314  dcf4              BGT      |L1.768|
000316  f7fffffe          BL       VK2C23B_I2CRDDat
00031a  f8040b01          STRB     r0,[r4],#1            ;364
00031e  f7fffffe          BL       VK2C23B_I2CSendNAck
000322  f7fffffe          BL       VK2C23B_I2CStop
000326  2000              MOVS     r0,#0                 ;368
000328  e7cc              B        |L1.708|
;;;370    /*******************************************************************************
                          ENDP

                  VK2C23B_DisAll PROC
;;;377    *******************************************************************************/
;;;378    void VK2C23B_DisAll(unsigned char dat)
00032a  b570              PUSH     {r4-r6,lr}
;;;379    {
00032c  4605              MOV      r5,r0
;;;380    	unsigned char segi;
;;;381    	
;;;382    	for(segi=0;segi<35;segi++)
00032e  2400              MOVS     r4,#0
000330  e003              B        |L1.826|
                  |L1.818|
;;;383    	{
;;;384    		VK2C23B_dispram[segi]=dat;
000332  483b              LDR      r0,|L1.1056|
000334  5505              STRB     r5,[r0,r4]
000336  1c60              ADDS     r0,r4,#1              ;382
000338  b2c4              UXTB     r4,r0                 ;382
                  |L1.826|
00033a  2c23              CMP      r4,#0x23              ;382
00033c  dbf9              BLT      |L1.818|
;;;385    	}
;;;386    	WritenDataVK2C23B(0,VK2C23B_dispram,35);//这里送8bit数据对应1个SEG，每8bit数据地址加1，每8位数据1个ACK
00033e  2223              MOVS     r2,#0x23
000340  4937              LDR      r1,|L1.1056|
000342  2000              MOVS     r0,#0
000344  f7fffffe          BL       WritenDataVK2C23B
;;;387    	
;;;388    }
000348  bd70              POP      {r4-r6,pc}
;;;389    /*******************************************************************************
                          ENDP

                  VK2C23B_DisDotOn PROC
;;;396    *******************************************************************************/
;;;397    void VK2C23B_DisDotOn(unsigned char seg,unsigned char com)
00034a  b5f8              PUSH     {r3-r7,lr}
;;;398    {
00034c  4604              MOV      r4,r0
00034e  460d              MOV      r5,r1
;;;399    	unsigned char addrbit,tempdat;
;;;400    	
;;;401    	addrbit=(1<<com);
000350  2001              MOVS     r0,#1
000352  40a8              LSLS     r0,r0,r5
000354  b2c6              UXTB     r6,r0
;;;402    	tempdat=VK2C23B_dispram[seg]|addrbit;
000356  4832              LDR      r0,|L1.1056|
000358  5d00              LDRB     r0,[r0,r4]
00035a  4330              ORRS     r0,r0,r6
00035c  9000              STR      r0,[sp,#0]
;;;403    	VK2C23B_dispram[seg]=tempdat;
00035e  f89d0000          LDRB     r0,[sp,#0]
000362  492f              LDR      r1,|L1.1056|
000364  5508              STRB     r0,[r1,r4]
;;;404    	WritenDataVK2C23B(seg,&tempdat,1);//这里送8位数据低4bit有效，每8bit数据地址加1，每8位数据1个ACK
000366  2201              MOVS     r2,#1
000368  4669              MOV      r1,sp
00036a  4620              MOV      r0,r4
00036c  f7fffffe          BL       WritenDataVK2C23B
;;;405    }
000370  bdf8              POP      {r3-r7,pc}
;;;406    /*******************************************************************************
                          ENDP

                  VK2C23B_DisDotOff PROC
;;;413    *******************************************************************************/
;;;414    void VK2C23B_DisDotOff(unsigned char seg,unsigned char com)
000372  b5f8              PUSH     {r3-r7,lr}
;;;415    {
000374  4604              MOV      r4,r0
000376  460d              MOV      r5,r1
;;;416    	unsigned char addrbit,tempdat;
;;;417    
;;;418    	addrbit=(1<<com);
000378  2001              MOVS     r0,#1
00037a  40a8              LSLS     r0,r0,r5
00037c  b2c6              UXTB     r6,r0
;;;419    	tempdat=VK2C23B_dispram[seg]&~addrbit;
00037e  4828              LDR      r0,|L1.1056|
000380  5d00              LDRB     r0,[r0,r4]
000382  43b0              BICS     r0,r0,r6
000384  9000              STR      r0,[sp,#0]
;;;420    	VK2C23B_dispram[seg]=tempdat;
000386  f89d0000          LDRB     r0,[sp,#0]
00038a  4925              LDR      r1,|L1.1056|
00038c  5508              STRB     r0,[r1,r4]
;;;421    	WritenDataVK2C23B(seg,&tempdat,1);
00038e  2201              MOVS     r2,#1
000390  4669              MOV      r1,sp
000392  4620              MOV      r0,r4
000394  f7fffffe          BL       WritenDataVK2C23B
;;;422    }
000398  bdf8              POP      {r3-r7,pc}
;;;423    /*******************************************************************************
                          ENDP

                  VK2C23B_Enter_PowerOff PROC
;;;429    *******************************************************************************/
;;;430    void VK2C23B_Enter_PowerOff(void)
00039a  b510              PUSH     {r4,lr}
;;;431    {		
;;;432    	WriteCmdVK2C23B(VK2C23B_SYSSET,SYSOFF_LCDOFF);
00039c  2100              MOVS     r1,#0
00039e  2084              MOVS     r0,#0x84
0003a0  f7fffffe          BL       WriteCmdVK2C23B
;;;433    }
0003a4  bd10              POP      {r4,pc}
;;;434    /*******************************************************************************
                          ENDP

                  VK2C23B_Exit_PowerOff PROC
;;;440    *******************************************************************************/
;;;441    void VK2C23B_Exit_PowerOff(void)
0003a6  b510              PUSH     {r4,lr}
;;;442    {	
;;;443    	WriteCmdVK2C23B(VK2C23B_SYSSET,SYSON_LCDON);
0003a8  2103              MOVS     r1,#3
0003aa  2084              MOVS     r0,#0x84
0003ac  f7fffffe          BL       WriteCmdVK2C23B
;;;444    }
0003b0  bd10              POP      {r4,pc}
;;;445    
                          ENDP

                  VK2C23B_Lowlevel_Init PROC
;;;452    *******************************************************************************/
;;;453    void VK2C23B_Lowlevel_Init(void)
0003b2  b510              PUSH     {r4,lr}
;;;454    {
;;;455    	//通信线电平不同，建议加电平转换电路
;;;456    	//此函数根据客户单片机做相应的修改	
;;;457    	GPIO_SetMode(VK2C23B_SCL_PORT, VK2C23B_SCL_PIN, GPIO_MODE_OUTPUT);
0003b4  2201              MOVS     r2,#1
0003b6  03d1              LSLS     r1,r2,#15
0003b8  4818              LDR      r0,|L1.1052|
0003ba  f7fffffe          BL       GPIO_SetMode
;;;458    	GPIO_SetMode(VK2C23B_SDA_PORT, VK2C23B_SDA_PIN, GPIO_MODE_QUASI);
0003be  2203              MOVS     r2,#3
0003c0  2120              MOVS     r1,#0x20
0003c2  4816              LDR      r0,|L1.1052|
0003c4  f7fffffe          BL       GPIO_SetMode
;;;459    		      
;;;460    	VK2C23B_SCL_H();  
0003c8  2001              MOVS     r0,#1
0003ca  4913              LDR      r1,|L1.1048|
0003cc  6008              STR      r0,[r1,#0]
;;;461    	VK2C23B_SDA_H(); 	
0003ce  4912              LDR      r1,|L1.1048|
0003d0  3928              SUBS     r1,r1,#0x28
0003d2  6008              STR      r0,[r1,#0]
;;;462    }
0003d4  bd10              POP      {r4,pc}
;;;463    /*******************************************************************************
                          ENDP

                  VK2C23B_InitSequence PROC
;;;469    *******************************************************************************/
;;;470    void VK2C23B_InitSequence(void)
0003d6  b510              PUSH     {r4,lr}
;;;471    {	
;;;472    	//管脚配置根据客户单片机做相应的修改
;;;473    	VK2C23B_Lowlevel_Init();
0003d8  f7fffffe          BL       VK2C23B_Lowlevel_Init
;;;474    	WriteCmdVK2C23B(VK2C23B_MODESET,CCOM_1_3__8); //模式设置  1/3 Bais 1/8 Duty
0003dc  2102              MOVS     r1,#2
0003de  2082              MOVS     r0,#0x82
0003e0  f7fffffe          BL       WriteCmdVK2C23B
;;;475    //	WriteCmdVK2C23B(VK2C23B_MODESET,CCOM_1_4__8); //模式设置  1/4 Bais 1/8 Duty
;;;476    	VK2C23B_maxcom=8;
0003e4  2008              MOVS     r0,#8
0003e6  490f              LDR      r1,|L1.1060|
0003e8  7008              STRB     r0,[r1,#0]
;;;477    	WriteCmdVK2C23B(VK2C23B_SYSSET,SYSON_LCDON); 		//内部系统振荡器开，lcd开显示
0003ea  2103              MOVS     r1,#3
0003ec  2084              MOVS     r0,#0x84
0003ee  f7fffffe          BL       WriteCmdVK2C23B
;;;478    	WriteCmdVK2C23B(VK2C23B_FRAMESET,FRAME_80HZ); 	//帧频率80Hz
0003f2  2100              MOVS     r1,#0
0003f4  2086              MOVS     r0,#0x86
0003f6  f7fffffe          BL       WriteCmdVK2C23B
;;;479    //	WriteCmdVK2C23B(VK2C23B_FRAMESET,FRAME_160HZ);//帧频率160Hz
;;;480    	WriteCmdVK2C23B(VK2C23B_BLINKSET,BLINK_OFF); 		//闪烁关闭	
0003fa  2100              MOVS     r1,#0
0003fc  2088              MOVS     r0,#0x88
0003fe  f7fffffe          BL       WriteCmdVK2C23B
;;;481    //	WriteCmdVK2C23B(VK2C23B_BLINKSET,BLINK_2HZ); 		//闪烁2HZ
;;;482    //	WriteCmdVK2C23B(VK2C23B_BLINKSET,BLINK_1HZ); 		//闪烁1HZ
;;;483    //	WriteCmdVK2C23B(VK2C23B_BLINKSET,BLINK_0D5HZ); 	//闪烁0.5HZ
;;;484    	//SEG/VLCD共用脚设为VLCD，内部电压调整功能关闭,VLCD和VDD短接VR=0偏置电压=VDD
;;;485    //	WriteCmdVK2C23B(VK2C23B_IVASET,VLCDSEL_IVAOFF_R0); 
;;;486    	//SEG/VLCD共用脚设为VLCD，内部电压调整功能关闭,VLCD和VDD串接电阻VR>0偏置电压=VLCD
;;;487    //	WriteCmdVK2C23B(VK2C23B_IVASET,VLCDSEL_IVAOFF_R1); 
;;;488    	//SEG/VLCD共用脚设为SEG，内部偏置电压调整：1/3bias=0.652VDD 1/4bias=0.714VDD
;;;489    	WriteCmdVK2C23B(VK2C23B_IVASET,SEGSEL_IVA00H);	
000402  2130              MOVS     r1,#0x30
000404  208a              MOVS     r0,#0x8a
000406  f7fffffe          BL       WriteCmdVK2C23B
;;;490    }
00040a  bd10              POP      {r4,pc}
;;;491    /*******************************************************************************
                          ENDP

                  VK2C23B_Init PROC
;;;497    *******************************************************************************/
;;;498    void VK2C23B_Init(void)
00040c  b510              PUSH     {r4,lr}
;;;499    {	
;;;500    	//管脚配置根据客户单片机做相应的修改
;;;501    	VK2C23B_Lowlevel_Init();
00040e  f7fffffe          BL       VK2C23B_Lowlevel_Init
;;;502    	//初始化时序
;;;503    	VK2C23B_InitSequence();
000412  f7fffffe          BL       VK2C23B_InitSequence
;;;504    }
000416  bd10              POP      {r4,pc}
                  |L1.1048|
                          DCD      0x4000487c
                  |L1.1052|
                          DCD      0x40004040
                  |L1.1056|
                          DCD      VK2C23B_dispram
                  |L1.1060|
                          DCD      VK2C23B_maxcom
                          ENDP

                  VK2C23B_Main PROC
;;;511    *******************************************************************************/
;;;512    void VK2C23B_Main(void)
000428  f7fffffe          BL       VK2C23B_Init
;;;513    {	
;;;514    	VK2C23B_Init();
;;;515    	VK2C23B_DisAll(0x00);
00042c  2000              MOVS     r0,#0
00042e  f7fffffe          BL       VK2C23B_DisAll
;;;516    	while(1)
000432  e0aa              B        |L1.1418|
                  |L1.1076|
;;;517    	{
;;;518    		VK2C23B_DisAll(0xff);			//LCD全显
000434  20ff              MOVS     r0,#0xff
000436  f7fffffe          BL       VK2C23B_DisAll
;;;519    		delay_nms(3000);					//延时1S
00043a  f64030b8          MOV      r0,#0xbb8
00043e  f7fffffe          BL       delay_nms
;;;520    	
;;;521    		VK2C23B_DisAll(0x00);			//LCD全关
000442  2000              MOVS     r0,#0
000444  f7fffffe          BL       VK2C23B_DisAll
;;;522    		delay_nms(3000);					//延时1S
000448  f64030b8          MOV      r0,#0xbb8
00044c  f7fffffe          BL       delay_nms
;;;523    		
;;;524    		//LCD半显
;;;525    		VK2C23B_DisAll(0xAA);			
000450  20aa              MOVS     r0,#0xaa
000452  f7fffffe          BL       VK2C23B_DisAll
;;;526    		ReadnDataVK2C23B(0,VK2C23B_readbuf,35);	//读回RAM数据
000456  2223              MOVS     r2,#0x23
000458  494c              LDR      r1,|L1.1420|
00045a  2000              MOVS     r0,#0
00045c  f7fffffe          BL       ReadnDataVK2C23B
;;;527    		delay_nms(1500);					//延时
000460  f24050dc          MOV      r0,#0x5dc
000464  f7fffffe          BL       delay_nms
;;;528    		VK2C23B_DisAll(0x55);			
000468  2055              MOVS     r0,#0x55
00046a  f7fffffe          BL       VK2C23B_DisAll
;;;529    		ReadnDataVK2C23B(0,VK2C23B_readbuf,35);	//读回RAM数据
00046e  2223              MOVS     r2,#0x23
000470  4946              LDR      r1,|L1.1420|
000472  2000              MOVS     r0,#0
000474  f7fffffe          BL       ReadnDataVK2C23B
;;;530    		delay_nms(1500);					//延时
000478  f24050dc          MOV      r0,#0x5dc
00047c  f7fffffe          BL       delay_nms
;;;531    		
;;;532    		//掉电
;;;533    		VK2C23B_DisAll(0x00);			//LCD全关		
000480  2000              MOVS     r0,#0
000482  f7fffffe          BL       VK2C23B_DisAll
;;;534    		VK2C23B_Enter_PowerOff();	//进入掉电模式
000486  f7fffffe          BL       VK2C23B_Enter_PowerOff
;;;535    		delay_nms(5000);					//延时5S		
00048a  f2413088          MOV      r0,#0x1388
00048e  f7fffffe          BL       delay_nms
;;;536    		VK2C23B_Exit_PowerOff();	//退出掉电模式
000492  f7fffffe          BL       VK2C23B_Exit_PowerOff
;;;537    		
;;;538    		VK2C23B_DisAll(0x00);			//LCD全关
000496  2000              MOVS     r0,#0
000498  f7fffffe          BL       VK2C23B_DisAll
;;;539    		delay_nms(500);					  //延时
00049c  f44f70fa          MOV      r0,#0x1f4
0004a0  f7fffffe          BL       delay_nms
;;;540    		for(VK2C23B_segi=0;VK2C23B_segi<VK2C23B_SEGNUM;VK2C23B_segi++)//seg
0004a4  2000              MOVS     r0,#0
0004a6  493a              LDR      r1,|L1.1424|
0004a8  7008              STRB     r0,[r1,#0]
0004aa  e02b              B        |L1.1284|
                  |L1.1196|
;;;541    		{
;;;542    			for(VK2C23B_comi=0;VK2C23B_comi<VK2C23B_maxcom;VK2C23B_comi++)//com
0004ac  2000              MOVS     r0,#0
0004ae  4939              LDR      r1,|L1.1428|
0004b0  7008              STRB     r0,[r1,#0]
0004b2  e01c              B        |L1.1262|
                  |L1.1204|
;;;543    			{
;;;544    					VK2C23B_DisDotOn(VK2C23B_segtab[VK2C23B_segi]-4,VK2C23B_comi);	//LCD单点点亮
0004b4  4938              LDR      r1,|L1.1432|
0004b6  4a36              LDR      r2,|L1.1424|
0004b8  7812              LDRB     r2,[r2,#0]  ; VK2C23B_segi
0004ba  5c89              LDRB     r1,[r1,r2]
0004bc  1f09              SUBS     r1,r1,#4
0004be  b2c8              UXTB     r0,r1
0004c0  4934              LDR      r1,|L1.1428|
0004c2  7809              LDRB     r1,[r1,#0]  ; VK2C23B_comi
0004c4  f7fffffe          BL       VK2C23B_DisDotOn
;;;545    				delay_nms(300);				//延时300mS
0004c8  f44f7096          MOV      r0,#0x12c
0004cc  f7fffffe          BL       delay_nms
;;;546    				VK2C23B_DisDotOff(VK2C23B_segtab[VK2C23B_segi]-4,VK2C23B_comi);	  //此行配合单点点亮函数实现单点点亮，屏蔽此行顺序点亮
0004d0  4931              LDR      r1,|L1.1432|
0004d2  4a2f              LDR      r2,|L1.1424|
0004d4  7812              LDRB     r2,[r2,#0]  ; VK2C23B_segi
0004d6  5c89              LDRB     r1,[r1,r2]
0004d8  1f09              SUBS     r1,r1,#4
0004da  b2c8              UXTB     r0,r1
0004dc  492d              LDR      r1,|L1.1428|
0004de  7809              LDRB     r1,[r1,#0]  ; VK2C23B_comi
0004e0  f7fffffe          BL       VK2C23B_DisDotOff
0004e4  482b              LDR      r0,|L1.1428|
0004e6  7800              LDRB     r0,[r0,#0]            ;542  ; VK2C23B_comi
0004e8  1c40              ADDS     r0,r0,#1              ;542
0004ea  492a              LDR      r1,|L1.1428|
0004ec  7008              STRB     r0,[r1,#0]            ;542
                  |L1.1262|
0004ee  4829              LDR      r0,|L1.1428|
0004f0  7800              LDRB     r0,[r0,#0]            ;542  ; VK2C23B_comi
0004f2  492a              LDR      r1,|L1.1436|
0004f4  7809              LDRB     r1,[r1,#0]            ;542  ; VK2C23B_maxcom
0004f6  4288              CMP      r0,r1                 ;542
0004f8  dbdc              BLT      |L1.1204|
0004fa  4825              LDR      r0,|L1.1424|
0004fc  7800              LDRB     r0,[r0,#0]            ;540  ; VK2C23B_segi
0004fe  1c40              ADDS     r0,r0,#1              ;540
000500  4923              LDR      r1,|L1.1424|
000502  7008              STRB     r0,[r1,#0]            ;540
                  |L1.1284|
000504  4822              LDR      r0,|L1.1424|
000506  7800              LDRB     r0,[r0,#0]            ;540  ; VK2C23B_segi
000508  2823              CMP      r0,#0x23              ;540
00050a  dbcf              BLT      |L1.1196|
;;;547    			}
;;;548    		}
;;;549    		
;;;550    		VK2C23B_DisAll(0xff);			//LCD全显
00050c  20ff              MOVS     r0,#0xff
00050e  f7fffffe          BL       VK2C23B_DisAll
;;;551    		delay_nms(500);					  //延时
000512  f44f70fa          MOV      r0,#0x1f4
000516  f7fffffe          BL       delay_nms
;;;552    		for(VK2C23B_segi=0;VK2C23B_segi<VK2C23B_SEGNUM;VK2C23B_segi++)//seg
00051a  2000              MOVS     r0,#0
00051c  491c              LDR      r1,|L1.1424|
00051e  7008              STRB     r0,[r1,#0]
000520  e02b              B        |L1.1402|
                  |L1.1314|
;;;553    		{
;;;554    			for(VK2C23B_comi=0;VK2C23B_comi<VK2C23B_maxcom;VK2C23B_comi++)//com
000522  2000              MOVS     r0,#0
000524  491b              LDR      r1,|L1.1428|
000526  7008              STRB     r0,[r1,#0]
000528  e01c              B        |L1.1380|
                  |L1.1322|
;;;555    			{
;;;556    					VK2C23B_DisDotOff(VK2C23B_segtab[VK2C23B_segi]-4,VK2C23B_comi);	//LCD单点关闭
00052a  491b              LDR      r1,|L1.1432|
00052c  4a18              LDR      r2,|L1.1424|
00052e  7812              LDRB     r2,[r2,#0]  ; VK2C23B_segi
000530  5c89              LDRB     r1,[r1,r2]
000532  1f09              SUBS     r1,r1,#4
000534  b2c8              UXTB     r0,r1
000536  4917              LDR      r1,|L1.1428|
000538  7809              LDRB     r1,[r1,#0]  ; VK2C23B_comi
00053a  f7fffffe          BL       VK2C23B_DisDotOff
;;;557    				delay_nms(300);				//延时300mS
00053e  f44f7096          MOV      r0,#0x12c
000542  f7fffffe          BL       delay_nms
;;;558    				VK2C23B_DisDotOn(VK2C23B_segtab[VK2C23B_segi]-4,VK2C23B_comi);  //此行配合单点关闭函数实现单点关闭，屏蔽此行顺序关闭
000546  4914              LDR      r1,|L1.1432|
000548  4a11              LDR      r2,|L1.1424|
00054a  7812              LDRB     r2,[r2,#0]  ; VK2C23B_segi
00054c  5c89              LDRB     r1,[r1,r2]
00054e  1f09              SUBS     r1,r1,#4
000550  b2c8              UXTB     r0,r1
000552  4910              LDR      r1,|L1.1428|
000554  7809              LDRB     r1,[r1,#0]  ; VK2C23B_comi
000556  f7fffffe          BL       VK2C23B_DisDotOn
00055a  480e              LDR      r0,|L1.1428|
00055c  7800              LDRB     r0,[r0,#0]            ;554  ; VK2C23B_comi
00055e  1c40              ADDS     r0,r0,#1              ;554
000560  490c              LDR      r1,|L1.1428|
000562  7008              STRB     r0,[r1,#0]            ;554
                  |L1.1380|
000564  480b              LDR      r0,|L1.1428|
000566  7800              LDRB     r0,[r0,#0]            ;554  ; VK2C23B_comi
000568  490c              LDR      r1,|L1.1436|
00056a  7809              LDRB     r1,[r1,#0]            ;554  ; VK2C23B_maxcom
00056c  4288              CMP      r0,r1                 ;554
00056e  dbdc              BLT      |L1.1322|
000570  4807              LDR      r0,|L1.1424|
000572  7800              LDRB     r0,[r0,#0]            ;552  ; VK2C23B_segi
000574  1c40              ADDS     r0,r0,#1              ;552
000576  4906              LDR      r1,|L1.1424|
000578  7008              STRB     r0,[r1,#0]            ;552
                  |L1.1402|
00057a  4805              LDR      r0,|L1.1424|
00057c  7800              LDRB     r0,[r0,#0]            ;552  ; VK2C23B_segi
00057e  2823              CMP      r0,#0x23              ;552
000580  dbcf              BLT      |L1.1314|
;;;559    			}
;;;560    		}
;;;561    		delay_nms(1000);					  //延时
000582  f44f707a          MOV      r0,#0x3e8
000586  f7fffffe          BL       delay_nms
                  |L1.1418|
00058a  e753              B        |L1.1076|
;;;562    	}
;;;563    }
;;;564    /************************END OF FILE****/
                          ENDP

                  |L1.1420|
                          DCD      VK2C23B_readbuf
                  |L1.1424|
                          DCD      VK2C23B_segi
                  |L1.1428|
                          DCD      VK2C23B_comi
                  |L1.1432|
                          DCD      VK2C23B_segtab
                  |L1.1436|
                          DCD      VK2C23B_maxcom

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  VK2C23B_dispram
                          %        35
                  VK2C23B_readbuf
                          %        35

                          AREA ||.data||, DATA, ALIGN=0

                  VK2C23B_segtab
000000  04050607          DCB      0x04,0x05,0x06,0x07
000004  08090a0b          DCB      0x08,0x09,0x0a,0x0b
000008  0c0d0e0f          DCB      0x0c,0x0d,0x0e,0x0f
00000c  10111213          DCB      0x10,0x11,0x12,0x13
000010  14151617          DCB      0x14,0x15,0x16,0x17
000014  18191a1b          DCB      0x18,0x19,0x1a,0x1b
000018  1c1d1e1f          DCB      0x1c,0x1d,0x1e,0x1f
00001c  20212223          DCB      0x20,0x21,0x22,0x23
000020  242526            DCB      0x24,0x25,0x26
                  VK2C23B_segi
000023  00                DCB      0x00
                  VK2C23B_comi
000024  00                DCB      0x00
                  VK2C23B_maxcom
000025  00                DCB      0x00

;*** Start embedded assembler ***

#line 1 "..\\lcd_driver\\VK2C23B_IO_I2C_DIR.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___20_VK2C23B_IO_I2C_DIR_c_d02620bb____REV16|
#line 114 "..\\..\\..\\Library\\CMSIS\\Include\\core_cmInstr.h"
|__asm___20_VK2C23B_IO_I2C_DIR_c_d02620bb____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___20_VK2C23B_IO_I2C_DIR_c_d02620bb____REVSH|
#line 128
|__asm___20_VK2C23B_IO_I2C_DIR_c_d02620bb____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
