; generated by Component: ARM Compiler 5.05 update 2 (build 169) Tool: ArmCC [4d0f38]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\vk2c23b_io_i2c_quasi.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\vk2c23b_io_i2c_quasi.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\..\..\Library\CMSIS\Include -I..\..\..\Library\Device\Nuvoton\M451Series\Include -I..\..\..\Library\StdDriver\inc -I..\Bsp -I..\User -I..\lcd_driver -I..\exti_driver -I..\led_driver -I..\touch -I..\dotmatix_lcd -I..\KH -ID:\工作\A工程资料\LCD\抗干扰系列_VK2C\VK2C例程\VK2C23B_TESTCODE\project\VK2C23B_FUNC\Keil\RTE -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.3.0\CMSIS\Include -D__UVISION_VERSION=515 -D_RTE_ --omf_browse=.\obj\vk2c23b_io_i2c_quasi.crf ..\lcd_driver\VK2C23B_IO_I2C_QUASI.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  delay_nus PROC
;;;54     *******************************************************************************/
;;;55     void delay_nus(unsigned int n)	   
000000  e007              B        |L1.18|
                  |L1.2|
;;;56     {
;;;57     	unsigned char i;
;;;58     	while(n--)
;;;59     	{
;;;60     		i=10;
000002  210a              MOVS     r1,#0xa
;;;61     		while(i--)
000004  e000              B        |L1.8|
                  |L1.6|
;;;62     		{//nop指令根据单片机做相应的修改
;;;63     			__nop();
000006  bf00              NOP      
                  |L1.8|
000008  000a              MOVS     r2,r1                 ;61
00000a  f1a10301          SUB      r3,r1,#1              ;61
00000e  b2d9              UXTB     r1,r3                 ;61
000010  d1f9              BNE      |L1.6|
                  |L1.18|
000012  0002              MOVS     r2,r0                 ;58
000014  f1a00001          SUB      r0,r0,#1              ;58
000018  d1f3              BNE      |L1.2|
;;;64     		}
;;;65     	}
;;;66     }
00001a  4770              BX       lr
;;;67     /*******************************************************************************
                          ENDP

                  delay_nms PROC
;;;73     *******************************************************************************/
;;;74     void delay_nms(unsigned long int n)
00001c  b510              PUSH     {r4,lr}
;;;75     {
00001e  4604              MOV      r4,r0
;;;76     	while(n--)
000020  e003              B        |L1.42|
                  |L1.34|
;;;77     	{
;;;78     		delay_nus(1000);
000022  f44f707a          MOV      r0,#0x3e8
000026  f7fffffe          BL       delay_nus
                  |L1.42|
00002a  0020              MOVS     r0,r4                 ;76
00002c  f1a40401          SUB      r4,r4,#1              ;76
000030  d1f7              BNE      |L1.34|
;;;79     	}
;;;80     }
000032  bd10              POP      {r4,pc}
;;;81     /*******************************************************************************
                          ENDP

                  VK2C23B_I2CStart PROC
;;;87     *******************************************************************************/
;;;88     void VK2C23B_I2CStart( void )
000034  b500              PUSH     {lr}
;;;89     {
;;;90       VK2C23B_SCL_H();
000036  2001              MOVS     r0,#1
000038  49fe              LDR      r1,|L1.1076|
00003a  6008              STR      r0,[r1,#0]
;;;91       VK2C23B_SDA_H();
00003c  49fd              LDR      r1,|L1.1076|
00003e  3928              SUBS     r1,r1,#0x28
000040  6008              STR      r0,[r1,#0]
;;;92       delay_nus(VK2C23B_CLK);
000042  200a              MOVS     r0,#0xa
000044  f7fffffe          BL       delay_nus
;;;93       VK2C23B_SDA_L();
000048  2000              MOVS     r0,#0
00004a  49fa              LDR      r1,|L1.1076|
00004c  3928              SUBS     r1,r1,#0x28
00004e  6008              STR      r0,[r1,#0]
;;;94       delay_nus(VK2C23B_CLK);
000050  200a              MOVS     r0,#0xa
000052  f7fffffe          BL       delay_nus
;;;95     }
000056  bd00              POP      {pc}
;;;96     /*******************************************************************************
                          ENDP

                  VK2C23B_I2CStop PROC
;;;102    *******************************************************************************/
;;;103    void VK2C23B_I2CStop( void )
000058  b500              PUSH     {lr}
;;;104    {
;;;105      VK2C23B_SCL_H();
00005a  2001              MOVS     r0,#1
00005c  49f5              LDR      r1,|L1.1076|
00005e  6008              STR      r0,[r1,#0]
;;;106      VK2C23B_SDA_L();
000060  2000              MOVS     r0,#0
000062  49f4              LDR      r1,|L1.1076|
000064  3928              SUBS     r1,r1,#0x28
000066  6008              STR      r0,[r1,#0]
;;;107      delay_nus(VK2C23B_CLK);
000068  200a              MOVS     r0,#0xa
00006a  f7fffffe          BL       delay_nus
;;;108      VK2C23B_SDA_H();
00006e  2001              MOVS     r0,#1
000070  49f0              LDR      r1,|L1.1076|
000072  3928              SUBS     r1,r1,#0x28
000074  6008              STR      r0,[r1,#0]
;;;109      delay_nus(VK2C23B_CLK);
000076  200a              MOVS     r0,#0xa
000078  f7fffffe          BL       delay_nus
;;;110    }
00007c  bd00              POP      {pc}
;;;111    /*******************************************************************************
                          ENDP

                  VK2C23B_I2CSlaveAck PROC
;;;117    *******************************************************************************/
;;;118    unsigned char VK2C23B_I2CSlaveAck( void )
00007e  b530              PUSH     {r4,r5,lr}
;;;119    {
;;;120      unsigned int TimeOut;
;;;121      unsigned char RetValue;
;;;122    	
;;;123      VK2C23B_SCL_L();
000080  2000              MOVS     r0,#0
000082  49ec              LDR      r1,|L1.1076|
000084  6008              STR      r0,[r1,#0]
;;;124      delay_nus(VK2C23B_CLK);
000086  200a              MOVS     r0,#0xa
000088  f7fffffe          BL       delay_nus
;;;125      VK2C23B_SCL_H();//第9个sclk上升沿
00008c  2001              MOVS     r0,#1
00008e  49e9              LDR      r1,|L1.1076|
000090  6008              STR      r0,[r1,#0]
;;;126      TimeOut = 10000;
000092  f2427510          MOV      r5,#0x2710
;;;127      while( TimeOut-- > 0 )
000096  e007              B        |L1.168|
                  |L1.152|
;;;128      {
;;;129        if( VK2C23B_GET_SDA()!=0 )//读取ack
000098  48e6              LDR      r0,|L1.1076|
00009a  3828              SUBS     r0,r0,#0x28
00009c  6800              LDR      r0,[r0,#0]
00009e  b108              CBZ      r0,|L1.164|
;;;130        {
;;;131          RetValue = 1;
0000a0  2401              MOVS     r4,#1
0000a2  e001              B        |L1.168|
                  |L1.164|
;;;132        }
;;;133        else
;;;134        {
;;;135          RetValue = 0;
0000a4  2400              MOVS     r4,#0
;;;136          break;
0000a6  e003              B        |L1.176|
                  |L1.168|
0000a8  0028              MOVS     r0,r5                 ;127
0000aa  f1a50501          SUB      r5,r5,#1              ;127
0000ae  d1f3              BNE      |L1.152|
                  |L1.176|
0000b0  bf00              NOP      
;;;137        }
;;;138      } 
;;;139    	VK2C23B_SCL_L();
0000b2  2000              MOVS     r0,#0
0000b4  49df              LDR      r1,|L1.1076|
0000b6  6008              STR      r0,[r1,#0]
;;;140      
;;;141      return RetValue;
0000b8  4620              MOV      r0,r4
;;;142    }
0000ba  bd30              POP      {r4,r5,pc}
;;;143    /*******************************************************************************
                          ENDP

                  VK2C23B_I2CSendAck PROC
;;;149    *******************************************************************************/
;;;150    void VK2C23B_I2CSendAck( void )
0000bc  b500              PUSH     {lr}
;;;151    {
;;;152      VK2C23B_SCL_L();
0000be  2000              MOVS     r0,#0
0000c0  49dc              LDR      r1,|L1.1076|
0000c2  6008              STR      r0,[r1,#0]
;;;153      VK2C23B_SDA_L();
0000c4  49db              LDR      r1,|L1.1076|
0000c6  3928              SUBS     r1,r1,#0x28
0000c8  6008              STR      r0,[r1,#0]
;;;154      delay_nus(VK2C23B_CLK*2);
0000ca  2014              MOVS     r0,#0x14
0000cc  f7fffffe          BL       delay_nus
;;;155      VK2C23B_SCL_H();
0000d0  2001              MOVS     r0,#1
0000d2  49d8              LDR      r1,|L1.1076|
0000d4  6008              STR      r0,[r1,#0]
;;;156      delay_nus(VK2C23B_CLK*2);
0000d6  2014              MOVS     r0,#0x14
0000d8  f7fffffe          BL       delay_nus
;;;157      VK2C23B_SCL_L();
0000dc  2000              MOVS     r0,#0
0000de  49d5              LDR      r1,|L1.1076|
0000e0  6008              STR      r0,[r1,#0]
;;;158      VK2C23B_SDA_H();
0000e2  2001              MOVS     r0,#1
0000e4  49d3              LDR      r1,|L1.1076|
0000e6  3928              SUBS     r1,r1,#0x28
0000e8  6008              STR      r0,[r1,#0]
;;;159    }
0000ea  bd00              POP      {pc}
;;;160    /*******************************************************************************
                          ENDP

                  VK2C23B_I2CSendNAck PROC
;;;166    *******************************************************************************/
;;;167    void VK2C23B_I2CSendNAck( void )
0000ec  b500              PUSH     {lr}
;;;168    {
;;;169      VK2C23B_SCL_L();
0000ee  2000              MOVS     r0,#0
0000f0  49d0              LDR      r1,|L1.1076|
0000f2  6008              STR      r0,[r1,#0]
;;;170      VK2C23B_SDA_H();
0000f4  2001              MOVS     r0,#1
0000f6  49cf              LDR      r1,|L1.1076|
0000f8  3928              SUBS     r1,r1,#0x28
0000fa  6008              STR      r0,[r1,#0]
;;;171      delay_nus(VK2C23B_CLK);
0000fc  200a              MOVS     r0,#0xa
0000fe  f7fffffe          BL       delay_nus
;;;172      VK2C23B_SCL_H();
000102  2001              MOVS     r0,#1
000104  49cb              LDR      r1,|L1.1076|
000106  6008              STR      r0,[r1,#0]
;;;173      delay_nus(VK2C23B_CLK);
000108  200a              MOVS     r0,#0xa
00010a  f7fffffe          BL       delay_nus
;;;174    }
00010e  bd00              POP      {pc}
;;;175    /*******************************************************************************
                          ENDP

                  VK2C23B_I2CWriteByte PROC
;;;181    *******************************************************************************/
;;;182    void VK2C23B_I2CWriteByte( unsigned char byte )
000110  b530              PUSH     {r4,r5,lr}
;;;183    {
000112  4604              MOV      r4,r0
;;;184    	unsigned char i=8;
000114  2508              MOVS     r5,#8
;;;185    	while (i--)
000116  e019              B        |L1.332|
                  |L1.280|
;;;186    	{ 
;;;187    		VK2C23B_SCL_L();
000118  2000              MOVS     r0,#0
00011a  49c6              LDR      r1,|L1.1076|
00011c  6008              STR      r0,[r1,#0]
;;;188    		if(byte&0x80)
00011e  f0040080          AND      r0,r4,#0x80
000122  b120              CBZ      r0,|L1.302|
;;;189    			VK2C23B_SDA_H();
000124  2001              MOVS     r0,#1
000126  49c3              LDR      r1,|L1.1076|
000128  3928              SUBS     r1,r1,#0x28
00012a  6008              STR      r0,[r1,#0]
00012c  e003              B        |L1.310|
                  |L1.302|
;;;190    		else
;;;191    			VK2C23B_SDA_L();
00012e  2000              MOVS     r0,#0
000130  49c0              LDR      r1,|L1.1076|
000132  3928              SUBS     r1,r1,#0x28
000134  6008              STR      r0,[r1,#0]
                  |L1.310|
;;;192    		byte<<=1; 
000136  0660              LSLS     r0,r4,#25
000138  0e04              LSRS     r4,r0,#24
;;;193    		delay_nus(VK2C23B_CLK);
00013a  200a              MOVS     r0,#0xa
00013c  f7fffffe          BL       delay_nus
;;;194    		VK2C23B_SCL_H();     
000140  2001              MOVS     r0,#1
000142  49bc              LDR      r1,|L1.1076|
000144  6008              STR      r0,[r1,#0]
;;;195    		delay_nus(VK2C23B_CLK);
000146  200a              MOVS     r0,#0xa
000148  f7fffffe          BL       delay_nus
                  |L1.332|
00014c  0028              MOVS     r0,r5                 ;185
00014e  f1a50101          SUB      r1,r5,#1              ;185
000152  b2cd              UXTB     r5,r1                 ;185
000154  d1e0              BNE      |L1.280|
;;;196    	}
;;;197    }
000156  bd30              POP      {r4,r5,pc}
;;;198    
                          ENDP

                  WriteCmdVK2C23B PROC
;;;206    *******************************************************************************/
;;;207    unsigned char WriteCmdVK2C23B(unsigned char cmd, unsigned char data )
000158  b530              PUSH     {r4,r5,lr}
;;;208    {
00015a  4605              MOV      r5,r0
00015c  460c              MOV      r4,r1
;;;209    	VK2C23B_I2CStart();
00015e  f7fffffe          BL       VK2C23B_I2CStart
;;;210    
;;;211    	VK2C23B_I2CWriteByte( VK2C23B_ADDR|0x00 );
000162  207c              MOVS     r0,#0x7c
000164  f7fffffe          BL       VK2C23B_I2CWriteByte
;;;212    	if( 1 == VK2C23B_I2CSlaveAck() )
000168  f7fffffe          BL       VK2C23B_I2CSlaveAck
00016c  2801              CMP      r0,#1
00016e  d103              BNE      |L1.376|
;;;213    	{
;;;214    		VK2C23B_I2CStop(); 
000170  f7fffffe          BL       VK2C23B_I2CStop
;;;215    		return 0;   
000174  2000              MOVS     r0,#0
                  |L1.374|
;;;216    	}
;;;217    	VK2C23B_I2CWriteByte( cmd );
;;;218    	if( 1 == VK2C23B_I2CSlaveAck() )
;;;219    	{
;;;220    		VK2C23B_I2CStop(); 
;;;221    		return 0;   
;;;222    	}
;;;223    	VK2C23B_I2CWriteByte( data );
;;;224    	if( 1 == VK2C23B_I2CSlaveAck() )
;;;225    	{
;;;226    		VK2C23B_I2CStop(); 
;;;227    		return 0;   
;;;228    	}
;;;229      VK2C23B_I2CStop();
;;;230     
;;;231      return 0;    //返回操作成败标志
;;;232    }
000176  bd30              POP      {r4,r5,pc}
                  |L1.376|
000178  4628              MOV      r0,r5                 ;217
00017a  f7fffffe          BL       VK2C23B_I2CWriteByte
00017e  f7fffffe          BL       VK2C23B_I2CSlaveAck
000182  2801              CMP      r0,#1                 ;218
000184  d103              BNE      |L1.398|
000186  f7fffffe          BL       VK2C23B_I2CStop
00018a  2000              MOVS     r0,#0                 ;221
00018c  e7f3              B        |L1.374|
                  |L1.398|
00018e  4620              MOV      r0,r4                 ;223
000190  f7fffffe          BL       VK2C23B_I2CWriteByte
000194  f7fffffe          BL       VK2C23B_I2CSlaveAck
000198  2801              CMP      r0,#1                 ;224
00019a  d103              BNE      |L1.420|
00019c  f7fffffe          BL       VK2C23B_I2CStop
0001a0  2000              MOVS     r0,#0                 ;227
0001a2  e7e8              B        |L1.374|
                  |L1.420|
0001a4  f7fffffe          BL       VK2C23B_I2CStop
0001a8  2000              MOVS     r0,#0                 ;231
0001aa  e7e4              B        |L1.374|
;;;233    /*******************************************************************************
                          ENDP

                  VK2C23B_I2CRDDat PROC
;;;239    *******************************************************************************/
;;;240    unsigned char VK2C23B_I2CRDDat( void )
0001ac  b570              PUSH     {r4-r6,lr}
;;;241    {
;;;242    	unsigned char i,RetValue,bit;
;;;243    	
;;;244    	RetValue=0;	
0001ae  2500              MOVS     r5,#0
;;;245      for( i=0; i<8; i++ )
0001b0  2400              MOVS     r4,#0
0001b2  e018              B        |L1.486|
                  |L1.436|
;;;246      {
;;;247    		VK2C23B_SCL_H(); 
0001b4  2001              MOVS     r0,#1
0001b6  499f              LDR      r1,|L1.1076|
0001b8  6008              STR      r0,[r1,#0]
;;;248        delay_nus(VK2C23B_CLK);
0001ba  200a              MOVS     r0,#0xa
0001bc  f7fffffe          BL       delay_nus
;;;249        if( 1 == VK2C23B_GET_SDA() )
0001c0  489c              LDR      r0,|L1.1076|
0001c2  3828              SUBS     r0,r0,#0x28
0001c4  6800              LDR      r0,[r0,#0]
0001c6  2801              CMP      r0,#1
0001c8  d101              BNE      |L1.462|
;;;250          bit = 0X01;
0001ca  2601              MOVS     r6,#1
0001cc  e000              B        |L1.464|
                  |L1.462|
;;;251        else
;;;252          bit = 0x00;
0001ce  2600              MOVS     r6,#0
                  |L1.464|
;;;253          
;;;254        RetValue = (RetValue<<1)|bit;
0001d0  ea460045          ORR      r0,r6,r5,LSL #1
0001d4  b2c5              UXTB     r5,r0
;;;255        VK2C23B_SCL_L();
0001d6  2000              MOVS     r0,#0
0001d8  4996              LDR      r1,|L1.1076|
0001da  6008              STR      r0,[r1,#0]
;;;256        delay_nus(VK2C23B_CLK);
0001dc  200a              MOVS     r0,#0xa
0001de  f7fffffe          BL       delay_nus
0001e2  1c60              ADDS     r0,r4,#1              ;245
0001e4  b2c4              UXTB     r4,r0                 ;245
                  |L1.486|
0001e6  2c08              CMP      r4,#8                 ;245
0001e8  dbe4              BLT      |L1.436|
;;;257    	}
;;;258      
;;;259      return RetValue;
0001ea  4628              MOV      r0,r5
;;;260    }
0001ec  bd70              POP      {r4-r6,pc}
;;;261    /*******************************************************************************
                          ENDP

                  WritenDataVK2C23B PROC
;;;269    *******************************************************************************/
;;;270    unsigned char  WritenDataVK2C23B(unsigned char Addr,unsigned char *Databuf,unsigned char Cnt)
0001ee  b5f0              PUSH     {r4-r7,lr}
;;;271    {
0001f0  4607              MOV      r7,r0
0001f2  460c              MOV      r4,r1
0001f4  4616              MOV      r6,r2
;;;272    	unsigned char n;
;;;273    	
;;;274    	//START信号	
;;;275    	VK2C23B_I2CStart(); 									
0001f6  f7fffffe          BL       VK2C23B_I2CStart
;;;276    	//SLAVE地址
;;;277    	VK2C23B_I2CWriteByte(VK2C23B_ADDR); 	
0001fa  207c              MOVS     r0,#0x7c
0001fc  f7fffffe          BL       VK2C23B_I2CWriteByte
;;;278    	if( 1 == VK2C23B_I2CSlaveAck() )
000200  f7fffffe          BL       VK2C23B_I2CSlaveAck
000204  2801              CMP      r0,#1
000206  d103              BNE      |L1.528|
;;;279    	{
;;;280    		VK2C23B_I2CStop();													
000208  f7fffffe          BL       VK2C23B_I2CStop
;;;281    		return 0;										
00020c  2000              MOVS     r0,#0
                  |L1.526|
;;;282    	}
;;;283    	//写显示RAM命令
;;;284    	VK2C23B_I2CWriteByte(VK2C23B_RWRAM); 						
;;;285    	if( 1 == VK2C23B_I2CSlaveAck() )
;;;286    	{
;;;287    		VK2C23B_I2CStop();													
;;;288    		return 0;
;;;289    	}
;;;290    	//显示RAM起始地址
;;;291    	VK2C23B_I2CWriteByte(Addr); 						
;;;292    	if( 1 == VK2C23B_I2CSlaveAck() )
;;;293    	{
;;;294    		VK2C23B_I2CStop();													
;;;295    		return 0;
;;;296    	}
;;;297    	//发送Cnt个数据到显示RAM
;;;298    	for(n=0;n<Cnt;n++)
;;;299    	{ 
;;;300    		VK2C23B_I2CWriteByte(*Databuf++);
;;;301    		if( VK2C23B_I2CSlaveAck()==1 )
;;;302    		{
;;;303    			VK2C23B_I2CStop();													
;;;304    			return 0;
;;;305    		}
;;;306    	}
;;;307    	//STOP信号
;;;308    	 VK2C23B_I2CStop();											
;;;309    	 return 0;    
;;;310    }
00020e  bdf0              POP      {r4-r7,pc}
                  |L1.528|
000210  2080              MOVS     r0,#0x80              ;284
000212  f7fffffe          BL       VK2C23B_I2CWriteByte
000216  f7fffffe          BL       VK2C23B_I2CSlaveAck
00021a  2801              CMP      r0,#1                 ;285
00021c  d103              BNE      |L1.550|
00021e  f7fffffe          BL       VK2C23B_I2CStop
000222  2000              MOVS     r0,#0                 ;288
000224  e7f3              B        |L1.526|
                  |L1.550|
000226  4638              MOV      r0,r7                 ;291
000228  f7fffffe          BL       VK2C23B_I2CWriteByte
00022c  f7fffffe          BL       VK2C23B_I2CSlaveAck
000230  2801              CMP      r0,#1                 ;292
000232  d103              BNE      |L1.572|
000234  f7fffffe          BL       VK2C23B_I2CStop
000238  2000              MOVS     r0,#0                 ;295
00023a  e7e8              B        |L1.526|
                  |L1.572|
00023c  2500              MOVS     r5,#0                 ;298
00023e  e00d              B        |L1.604|
                  |L1.576|
000240  f8140b01          LDRB     r0,[r4],#1            ;300
000244  f7fffffe          BL       VK2C23B_I2CWriteByte
000248  f7fffffe          BL       VK2C23B_I2CSlaveAck
00024c  2801              CMP      r0,#1                 ;301
00024e  d103              BNE      |L1.600|
000250  f7fffffe          BL       VK2C23B_I2CStop
000254  2000              MOVS     r0,#0                 ;304
000256  e7da              B        |L1.526|
                  |L1.600|
000258  1c68              ADDS     r0,r5,#1              ;298
00025a  b2c5              UXTB     r5,r0                 ;298
                  |L1.604|
00025c  42b5              CMP      r5,r6                 ;298
00025e  dbef              BLT      |L1.576|
000260  f7fffffe          BL       VK2C23B_I2CStop
000264  2000              MOVS     r0,#0                 ;309
000266  e7d2              B        |L1.526|
;;;311    /*******************************************************************************
                          ENDP

                  ReadnDataVK2C23B PROC
;;;319    *******************************************************************************/
;;;320    unsigned char  ReadnDataVK2C23B(unsigned char Addr,unsigned char *Databuf,unsigned char Cnt)
000268  b5f0              PUSH     {r4-r7,lr}
;;;321    {
00026a  4607              MOV      r7,r0
00026c  460c              MOV      r4,r1
00026e  4616              MOV      r6,r2
;;;322    	unsigned char n;
;;;323    	
;;;324    	//START信号	
;;;325    	VK2C23B_I2CStart(); 									
000270  f7fffffe          BL       VK2C23B_I2CStart
;;;326    	//SLAVE地址写
;;;327    	VK2C23B_I2CWriteByte(VK2C23B_ADDR); 	
000274  207c              MOVS     r0,#0x7c
000276  f7fffffe          BL       VK2C23B_I2CWriteByte
;;;328    	if( 1 == VK2C23B_I2CSlaveAck() )
00027a  f7fffffe          BL       VK2C23B_I2CSlaveAck
00027e  2801              CMP      r0,#1
000280  d103              BNE      |L1.650|
;;;329    	{
;;;330    		VK2C23B_I2CStop();													
000282  f7fffffe          BL       VK2C23B_I2CStop
;;;331    		return 0;										
000286  2000              MOVS     r0,#0
                  |L1.648|
;;;332    	}                        
;;;333    	//显示RAM起始地址
;;;334    	VK2C23B_I2CWriteByte(Addr); 						
;;;335    	if( 1 == VK2C23B_I2CSlaveAck() )
;;;336    	{
;;;337    		VK2C23B_I2CStop();													
;;;338    		return 0;
;;;339    	}
;;;340    	
;;;341    	//STOP信号
;;;342    	VK2C23B_I2CStop();	
;;;343    	//START信号	
;;;344    	VK2C23B_I2CStart(); 									
;;;345    	//SLAVE地址读
;;;346    	VK2C23B_I2CWriteByte(VK2C23B_ADDRRD); 	
;;;347    		if( 1 == VK2C23B_I2CSlaveAck() )
;;;348    	{
;;;349    		VK2C23B_I2CStop();													
;;;350    		return 0;										
;;;351    	}  
;;;352    	//读Cnt个数据到显示RAM
;;;353    	for(n=0;n<Cnt-1;n++)
;;;354    	{ 
;;;355    		*Databuf++=VK2C23B_I2CRDDat();
;;;356    		VK2C23B_I2CSendAck();
;;;357    	}
;;;358    	*Databuf++=VK2C23B_I2CRDDat();
;;;359    	VK2C23B_I2CSendNAck();
;;;360    	//STOP信号
;;;361    	VK2C23B_I2CStop();											
;;;362    	 return 0;    
;;;363    }
000288  bdf0              POP      {r4-r7,pc}
                  |L1.650|
00028a  4638              MOV      r0,r7                 ;334
00028c  f7fffffe          BL       VK2C23B_I2CWriteByte
000290  f7fffffe          BL       VK2C23B_I2CSlaveAck
000294  2801              CMP      r0,#1                 ;335
000296  d103              BNE      |L1.672|
000298  f7fffffe          BL       VK2C23B_I2CStop
00029c  2000              MOVS     r0,#0                 ;338
00029e  e7f3              B        |L1.648|
                  |L1.672|
0002a0  f7fffffe          BL       VK2C23B_I2CStop
0002a4  f7fffffe          BL       VK2C23B_I2CStart
0002a8  207d              MOVS     r0,#0x7d              ;346
0002aa  f7fffffe          BL       VK2C23B_I2CWriteByte
0002ae  f7fffffe          BL       VK2C23B_I2CSlaveAck
0002b2  2801              CMP      r0,#1                 ;347
0002b4  d103              BNE      |L1.702|
0002b6  f7fffffe          BL       VK2C23B_I2CStop
0002ba  2000              MOVS     r0,#0                 ;350
0002bc  e7e4              B        |L1.648|
                  |L1.702|
0002be  2500              MOVS     r5,#0                 ;353
0002c0  e007              B        |L1.722|
                  |L1.706|
0002c2  f7fffffe          BL       VK2C23B_I2CRDDat
0002c6  f8040b01          STRB     r0,[r4],#1            ;355
0002ca  f7fffffe          BL       VK2C23B_I2CSendAck
0002ce  1c68              ADDS     r0,r5,#1              ;353
0002d0  b2c5              UXTB     r5,r0                 ;353
                  |L1.722|
0002d2  1e70              SUBS     r0,r6,#1              ;353
0002d4  42a8              CMP      r0,r5                 ;353
0002d6  dcf4              BGT      |L1.706|
0002d8  f7fffffe          BL       VK2C23B_I2CRDDat
0002dc  f8040b01          STRB     r0,[r4],#1            ;358
0002e0  f7fffffe          BL       VK2C23B_I2CSendNAck
0002e4  f7fffffe          BL       VK2C23B_I2CStop
0002e8  2000              MOVS     r0,#0                 ;362
0002ea  e7cd              B        |L1.648|
;;;364    /*******************************************************************************
                          ENDP

                  VK2C23B_DisAll PROC
;;;371    *******************************************************************************/
;;;372    void VK2C23B_DisAll(unsigned char dat)
0002ec  b530              PUSH     {r4,r5,lr}
;;;373    {
0002ee  4605              MOV      r5,r0
;;;374    	unsigned char segi;
;;;375    	
;;;376    	for(segi=0;segi<35;segi++)
0002f0  2400              MOVS     r4,#0
0002f2  e003              B        |L1.764|
                  |L1.756|
;;;377    	{
;;;378    		VK2C23B_dispram[segi]=dat;
0002f4  4850              LDR      r0,|L1.1080|
0002f6  5505              STRB     r5,[r0,r4]
0002f8  1c60              ADDS     r0,r4,#1              ;376
0002fa  b2c4              UXTB     r4,r0                 ;376
                  |L1.764|
0002fc  2c23              CMP      r4,#0x23              ;376
0002fe  dbf9              BLT      |L1.756|
;;;379    	}
;;;380    	WritenDataVK2C23B(0,VK2C23B_dispram,35);//这里送8bit数据对应1个SEG，每8bit数据地址加1，每8位数据1个ACK
000300  2223              MOVS     r2,#0x23
000302  494d              LDR      r1,|L1.1080|
000304  2000              MOVS     r0,#0
000306  f7fffffe          BL       WritenDataVK2C23B
;;;381    }
00030a  bd30              POP      {r4,r5,pc}
;;;382    /*******************************************************************************
                          ENDP

                  VK2C23B_DisDotOn PROC
;;;389    *******************************************************************************/
;;;390    void VK2C23B_DisDotOn(unsigned char seg,unsigned char com)
00030c  b578              PUSH     {r3-r6,lr}
;;;391    {
00030e  4604              MOV      r4,r0
000310  460d              MOV      r5,r1
;;;392    	unsigned char addrbit,tempdat;
;;;393    	
;;;394    	addrbit=(1<<com);
000312  2001              MOVS     r0,#1
000314  40a8              LSLS     r0,r0,r5
000316  b2c6              UXTB     r6,r0
;;;395    	tempdat=VK2C23B_dispram[seg]|addrbit;
000318  4847              LDR      r0,|L1.1080|
00031a  5d00              LDRB     r0,[r0,r4]
00031c  4330              ORRS     r0,r0,r6
00031e  9000              STR      r0,[sp,#0]
;;;396    	VK2C23B_dispram[seg]=tempdat;
000320  f89d0000          LDRB     r0,[sp,#0]
000324  4944              LDR      r1,|L1.1080|
000326  5508              STRB     r0,[r1,r4]
;;;397    	WritenDataVK2C23B(seg,&tempdat,1);//这里送8位数据低4bit有效，每8bit数据地址加1，每8位数据1个ACK
000328  2201              MOVS     r2,#1
00032a  4669              MOV      r1,sp
00032c  4620              MOV      r0,r4
00032e  f7fffffe          BL       WritenDataVK2C23B
;;;398    }
000332  bd78              POP      {r3-r6,pc}
;;;399    /*******************************************************************************
                          ENDP

                  VK2C23B_DisDotOff PROC
;;;406    *******************************************************************************/
;;;407    void VK2C23B_DisDotOff(unsigned char seg,unsigned char com)
000334  b578              PUSH     {r3-r6,lr}
;;;408    {
000336  4604              MOV      r4,r0
000338  460d              MOV      r5,r1
;;;409    	unsigned char addrbit,tempdat;
;;;410    
;;;411    	addrbit=(1<<com);
00033a  2001              MOVS     r0,#1
00033c  40a8              LSLS     r0,r0,r5
00033e  b2c6              UXTB     r6,r0
;;;412    	tempdat=VK2C23B_dispram[seg]&~addrbit;
000340  483d              LDR      r0,|L1.1080|
000342  5d00              LDRB     r0,[r0,r4]
000344  43b0              BICS     r0,r0,r6
000346  9000              STR      r0,[sp,#0]
;;;413    	VK2C23B_dispram[seg]=tempdat;
000348  f89d0000          LDRB     r0,[sp,#0]
00034c  493a              LDR      r1,|L1.1080|
00034e  5508              STRB     r0,[r1,r4]
;;;414    	WritenDataVK2C23B(seg,&tempdat,1);
000350  2201              MOVS     r2,#1
000352  4669              MOV      r1,sp
000354  4620              MOV      r0,r4
000356  f7fffffe          BL       WritenDataVK2C23B
;;;415    }
00035a  bd78              POP      {r3-r6,pc}
;;;416    /*******************************************************************************
                          ENDP

                  VK2C23B_Enter_PowerOff PROC
;;;422    *******************************************************************************/
;;;423    void VK2C23B_Enter_PowerOff(void)
00035c  b500              PUSH     {lr}
;;;424    {		
;;;425    	WriteCmdVK2C23B(VK2C23B_SYSSET,SYSOFF_LCDOFF);
00035e  2100              MOVS     r1,#0
000360  2084              MOVS     r0,#0x84
000362  f7fffffe          BL       WriteCmdVK2C23B
;;;426    }
000366  bd00              POP      {pc}
;;;427    /*******************************************************************************
                          ENDP

                  VK2C23B_Exit_PowerOff PROC
;;;433    *******************************************************************************/
;;;434    void VK2C23B_Exit_PowerOff(void)
000368  b500              PUSH     {lr}
;;;435    {	
;;;436    	WriteCmdVK2C23B(VK2C23B_SYSSET,SYSON_LCDON);
00036a  2103              MOVS     r1,#3
00036c  2084              MOVS     r0,#0x84
00036e  f7fffffe          BL       WriteCmdVK2C23B
;;;437    }
000372  bd00              POP      {pc}
;;;438    
                          ENDP

                  VK2C23B_Lowlevel_Init PROC
;;;445    *******************************************************************************/
;;;446    void VK2C23B_Lowlevel_Init(void)
000374  b510              PUSH     {r4,lr}
;;;447    {
;;;448    	//通信线电平不同，建议加电平转换电路
;;;449    	//此函数根据客户单片机做相应的修改	
;;;450    	GPIO_SetMode(VK2C23B_SCL_PORT, VK2C23B_SCL_PIN, GPIO_MODE_OUTPUT);
000376  2201              MOVS     r2,#1
000378  03d1              LSLS     r1,r2,#15
00037a  4830              LDR      r0,|L1.1084|
00037c  f7fffffe          BL       GPIO_SetMode
;;;451    	GPIO_SetMode(VK2C23B_SDA_PORT, VK2C23B_SDA_PIN, GPIO_MODE_QUASI);
000380  2203              MOVS     r2,#3
000382  2120              MOVS     r1,#0x20
000384  482d              LDR      r0,|L1.1084|
000386  f7fffffe          BL       GPIO_SetMode
;;;452    		      
;;;453    	VK2C23B_SCL_H();  
00038a  2001              MOVS     r0,#1
00038c  4929              LDR      r1,|L1.1076|
00038e  6008              STR      r0,[r1,#0]
;;;454    	VK2C23B_SDA_H(); 	
000390  4928              LDR      r1,|L1.1076|
000392  3928              SUBS     r1,r1,#0x28
000394  6008              STR      r0,[r1,#0]
;;;455    }
000396  bd10              POP      {r4,pc}
;;;456    /*******************************************************************************
                          ENDP

                  VK2C23B_InitSequence PROC
;;;462    *******************************************************************************/
;;;463    void VK2C23B_InitSequence(void)
000398  b510              PUSH     {r4,lr}
;;;464    {	
;;;465    	//管脚配置根据客户单片机做相应的修改
;;;466    	VK2C23B_Lowlevel_Init();
00039a  f7fffffe          BL       VK2C23B_Lowlevel_Init
;;;467    	WriteCmdVK2C23B(VK2C23B_MODESET,CCOM_1_3__8); //模式设置  1/3 Bais 1/8 Duty
00039e  2102              MOVS     r1,#2
0003a0  2082              MOVS     r0,#0x82
0003a2  f7fffffe          BL       WriteCmdVK2C23B
;;;468    //	WriteCmdVK2C23B(VK2C23B_MODESET,CCOM_1_4__8); //模式设置  1/4 Bais 1/8 Duty
;;;469    	VK2C23B_maxcom=8;
0003a6  2008              MOVS     r0,#8
0003a8  4925              LDR      r1,|L1.1088|
0003aa  7008              STRB     r0,[r1,#0]
;;;470    	WriteCmdVK2C23B(VK2C23B_SYSSET,SYSON_LCDON); 		//内部系统振荡器开，lcd开显示
0003ac  2103              MOVS     r1,#3
0003ae  2084              MOVS     r0,#0x84
0003b0  f7fffffe          BL       WriteCmdVK2C23B
;;;471    	WriteCmdVK2C23B(VK2C23B_FRAMESET,FRAME_80HZ); 	//帧频率80Hz
0003b4  2100              MOVS     r1,#0
0003b6  2086              MOVS     r0,#0x86
0003b8  f7fffffe          BL       WriteCmdVK2C23B
;;;472    //	WriteCmdVK2C23B(VK2C23B_FRAMESET,FRAME_160HZ);//帧频率160Hz
;;;473    	WriteCmdVK2C23B(VK2C23B_BLINKSET,BLINK_OFF); 		//闪烁关闭	
0003bc  2100              MOVS     r1,#0
0003be  2088              MOVS     r0,#0x88
0003c0  f7fffffe          BL       WriteCmdVK2C23B
;;;474    //	WriteCmdVK2C23B(VK2C23B_BLINKSET,BLINK_2HZ); 		//闪烁2HZ
;;;475    //	WriteCmdVK2C23B(VK2C23B_BLINKSET,BLINK_1HZ); 		//闪烁1HZ
;;;476    //	WriteCmdVK2C23B(VK2C23B_BLINKSET,BLINK_0D5HZ); 	//闪烁0.5HZ
;;;477    	//SEG/VLCD共用脚设为VLCD，内部电压调整功能关闭,VLCD和VDD短接VR=0偏置电压=VDD
;;;478    //	WriteCmdVK2C23B(VK2C23B_IVASET,VLCDSEL_IVAOFF_R0); 
;;;479    	//SEG/VLCD共用脚设为VLCD，内部电压调整功能关闭,VLCD和VDD串接电阻VR>0偏置电压=VLCD
;;;480    //	WriteCmdVK2C23B(VK2C23B_IVASET,VLCDSEL_IVAOFF_R1); 
;;;481    	//SEG/VLCD共用脚设为SEG，内部偏置电压调整：1/3bias=0.652VDD 1/4bias=0.714VDD
;;;482    	WriteCmdVK2C23B(VK2C23B_IVASET,SEGSEL_IVA00H);	
0003c4  2130              MOVS     r1,#0x30
0003c6  208a              MOVS     r0,#0x8a
0003c8  f7fffffe          BL       WriteCmdVK2C23B
;;;483    }
0003cc  bd10              POP      {r4,pc}
;;;484    /*******************************************************************************
                          ENDP

                  VK2C23B_Init PROC
;;;490    *******************************************************************************/
;;;491    void VK2C23B_Init(void)
0003ce  b510              PUSH     {r4,lr}
;;;492    {	
;;;493    	//管脚配置根据客户单片机做相应的修改
;;;494    	VK2C23B_Lowlevel_Init();
0003d0  f7fffffe          BL       VK2C23B_Lowlevel_Init
;;;495    	//初始化时序
;;;496    	VK2C23B_InitSequence();
0003d4  f7fffffe          BL       VK2C23B_InitSequence
;;;497    }
0003d8  bd10              POP      {r4,pc}
;;;498    /*******************************************************************************
                          ENDP

                  VK2C23B_Main PROC
;;;504    *******************************************************************************/
;;;505    void VK2C23B_Main(void)
0003da  f7fffffe          BL       VK2C23B_Init
;;;506    {	
;;;507    	VK2C23B_Init();
;;;508    	VK2C23B_DisAll(0x00);
0003de  2000              MOVS     r0,#0
0003e0  f7fffffe          BL       VK2C23B_DisAll
;;;509    	while(1)
0003e4  e0b5              B        |L1.1362|
                  |L1.998|
;;;510    	{
;;;511    		VK2C23B_DisAll(0xff);			//LCD全显
0003e6  20ff              MOVS     r0,#0xff
0003e8  f7fffffe          BL       VK2C23B_DisAll
;;;512    		delay_nms(3000);					//延时1S
0003ec  f64030b8          MOV      r0,#0xbb8
0003f0  f7fffffe          BL       delay_nms
;;;513    	
;;;514    		VK2C23B_DisAll(0x00);			//LCD全关
0003f4  2000              MOVS     r0,#0
0003f6  f7fffffe          BL       VK2C23B_DisAll
;;;515    		delay_nms(3000);					//延时1S
0003fa  f64030b8          MOV      r0,#0xbb8
0003fe  f7fffffe          BL       delay_nms
;;;516    		
;;;517    		//LCD半显
;;;518    		VK2C23B_DisAll(0xAA);			
000402  20aa              MOVS     r0,#0xaa
000404  f7fffffe          BL       VK2C23B_DisAll
;;;519    		ReadnDataVK2C23B(0,VK2C23B_readbuf,35);	//读回RAM数据
000408  2223              MOVS     r2,#0x23
00040a  490e              LDR      r1,|L1.1092|
00040c  2000              MOVS     r0,#0
00040e  f7fffffe          BL       ReadnDataVK2C23B
;;;520    		delay_nms(1500);					//延时
000412  f24050dc          MOV      r0,#0x5dc
000416  f7fffffe          BL       delay_nms
;;;521    		VK2C23B_DisAll(0x55);			
00041a  2055              MOVS     r0,#0x55
00041c  f7fffffe          BL       VK2C23B_DisAll
;;;522    		ReadnDataVK2C23B(0,VK2C23B_readbuf,35);	//读回RAM数据
000420  2223              MOVS     r2,#0x23
000422  4908              LDR      r1,|L1.1092|
000424  2000              MOVS     r0,#0
000426  f7fffffe          BL       ReadnDataVK2C23B
;;;523    		delay_nms(1500);					//延时
00042a  f24050dc          MOV      r0,#0x5dc
00042e  f7fffffe          BL       delay_nms
;;;524    		
;;;525    		//掉电
;;;526    		VK2C23B_DisAll(0x00);			//LCD全关		
000432  e009              B        |L1.1096|
                  |L1.1076|
                          DCD      0x4000487c
                  |L1.1080|
                          DCD      VK2C23B_dispram
                  |L1.1084|
                          DCD      0x40004040
                  |L1.1088|
                          DCD      VK2C23B_maxcom
                  |L1.1092|
                          DCD      VK2C23B_readbuf
                  |L1.1096|
000448  2000              MOVS     r0,#0
00044a  f7fffffe          BL       VK2C23B_DisAll
;;;527    		VK2C23B_Enter_PowerOff();	//进入掉电模式
00044e  f7fffffe          BL       VK2C23B_Enter_PowerOff
;;;528    		delay_nms(5000);					//延时5S		
000452  f2413088          MOV      r0,#0x1388
000456  f7fffffe          BL       delay_nms
;;;529    		VK2C23B_Exit_PowerOff();	//退出掉电模式
00045a  f7fffffe          BL       VK2C23B_Exit_PowerOff
;;;530    		
;;;531    		VK2C23B_DisAll(0x00);			//LCD全关
00045e  2000              MOVS     r0,#0
000460  f7fffffe          BL       VK2C23B_DisAll
;;;532    		delay_nms(500);					  //延时
000464  f44f70fa          MOV      r0,#0x1f4
000468  f7fffffe          BL       delay_nms
;;;533    		for(VK2C23B_segi=0;VK2C23B_segi<VK2C23B_SEGNUM;VK2C23B_segi++)//seg
00046c  2000              MOVS     r0,#0
00046e  4939              LDR      r1,|L1.1364|
000470  7008              STRB     r0,[r1,#0]
000472  e02b              B        |L1.1228|
                  |L1.1140|
;;;534    		{
;;;535    			for(VK2C23B_comi=0;VK2C23B_comi<VK2C23B_maxcom;VK2C23B_comi++)//com
000474  2000              MOVS     r0,#0
000476  4938              LDR      r1,|L1.1368|
000478  7008              STRB     r0,[r1,#0]
00047a  e01c              B        |L1.1206|
                  |L1.1148|
;;;536    			{
;;;537    					VK2C23B_DisDotOn(VK2C23B_segtab[VK2C23B_segi]-4,VK2C23B_comi);	//LCD单点点亮
00047c  4937              LDR      r1,|L1.1372|
00047e  4a35              LDR      r2,|L1.1364|
000480  7812              LDRB     r2,[r2,#0]  ; VK2C23B_segi
000482  5c89              LDRB     r1,[r1,r2]
000484  1f09              SUBS     r1,r1,#4
000486  b2c8              UXTB     r0,r1
000488  4933              LDR      r1,|L1.1368|
00048a  7809              LDRB     r1,[r1,#0]  ; VK2C23B_comi
00048c  f7fffffe          BL       VK2C23B_DisDotOn
;;;538    				delay_nms(300);				//延时300mS
000490  f44f7096          MOV      r0,#0x12c
000494  f7fffffe          BL       delay_nms
;;;539    				VK2C23B_DisDotOff(VK2C23B_segtab[VK2C23B_segi]-4,VK2C23B_comi);	  //此行配合单点点亮函数实现单点点亮，屏蔽此行顺序点亮
000498  4930              LDR      r1,|L1.1372|
00049a  4a2e              LDR      r2,|L1.1364|
00049c  7812              LDRB     r2,[r2,#0]  ; VK2C23B_segi
00049e  5c89              LDRB     r1,[r1,r2]
0004a0  1f09              SUBS     r1,r1,#4
0004a2  b2c8              UXTB     r0,r1
0004a4  492c              LDR      r1,|L1.1368|
0004a6  7809              LDRB     r1,[r1,#0]  ; VK2C23B_comi
0004a8  f7fffffe          BL       VK2C23B_DisDotOff
0004ac  482a              LDR      r0,|L1.1368|
0004ae  7800              LDRB     r0,[r0,#0]            ;535  ; VK2C23B_comi
0004b0  1c40              ADDS     r0,r0,#1              ;535
0004b2  4929              LDR      r1,|L1.1368|
0004b4  7008              STRB     r0,[r1,#0]            ;535
                  |L1.1206|
0004b6  4828              LDR      r0,|L1.1368|
0004b8  7800              LDRB     r0,[r0,#0]            ;535  ; VK2C23B_comi
0004ba  4929              LDR      r1,|L1.1376|
0004bc  7809              LDRB     r1,[r1,#0]            ;535  ; VK2C23B_maxcom
0004be  4288              CMP      r0,r1                 ;535
0004c0  dbdc              BLT      |L1.1148|
0004c2  4824              LDR      r0,|L1.1364|
0004c4  7800              LDRB     r0,[r0,#0]            ;533  ; VK2C23B_segi
0004c6  1c40              ADDS     r0,r0,#1              ;533
0004c8  4922              LDR      r1,|L1.1364|
0004ca  7008              STRB     r0,[r1,#0]            ;533
                  |L1.1228|
0004cc  4821              LDR      r0,|L1.1364|
0004ce  7800              LDRB     r0,[r0,#0]            ;533  ; VK2C23B_segi
0004d0  2823              CMP      r0,#0x23              ;533
0004d2  dbcf              BLT      |L1.1140|
;;;540    			}
;;;541    		}
;;;542    		
;;;543    		VK2C23B_DisAll(0xff);			//LCD全显
0004d4  20ff              MOVS     r0,#0xff
0004d6  f7fffffe          BL       VK2C23B_DisAll
;;;544    		delay_nms(500);					  //延时
0004da  f44f70fa          MOV      r0,#0x1f4
0004de  f7fffffe          BL       delay_nms
;;;545    		for(VK2C23B_segi=0;VK2C23B_segi<VK2C23B_SEGNUM;VK2C23B_segi++)//seg
0004e2  2000              MOVS     r0,#0
0004e4  491b              LDR      r1,|L1.1364|
0004e6  7008              STRB     r0,[r1,#0]
0004e8  e02b              B        |L1.1346|
                  |L1.1258|
;;;546    		{
;;;547    			for(VK2C23B_comi=0;VK2C23B_comi<VK2C23B_maxcom;VK2C23B_comi++)//com
0004ea  2000              MOVS     r0,#0
0004ec  491a              LDR      r1,|L1.1368|
0004ee  7008              STRB     r0,[r1,#0]
0004f0  e01c              B        |L1.1324|
                  |L1.1266|
;;;548    			{
;;;549    					VK2C23B_DisDotOff(VK2C23B_segtab[VK2C23B_segi]-4,VK2C23B_comi);	//LCD单点关闭
0004f2  491a              LDR      r1,|L1.1372|
0004f4  4a17              LDR      r2,|L1.1364|
0004f6  7812              LDRB     r2,[r2,#0]  ; VK2C23B_segi
0004f8  5c89              LDRB     r1,[r1,r2]
0004fa  1f09              SUBS     r1,r1,#4
0004fc  b2c8              UXTB     r0,r1
0004fe  4916              LDR      r1,|L1.1368|
000500  7809              LDRB     r1,[r1,#0]  ; VK2C23B_comi
000502  f7fffffe          BL       VK2C23B_DisDotOff
;;;550    				delay_nms(300);				//延时300mS
000506  f44f7096          MOV      r0,#0x12c
00050a  f7fffffe          BL       delay_nms
;;;551    				VK2C23B_DisDotOn(VK2C23B_segtab[VK2C23B_segi]-4,VK2C23B_comi);  //此行配合单点关闭函数实现单点关闭，屏蔽此行顺序关闭
00050e  4913              LDR      r1,|L1.1372|
000510  4a10              LDR      r2,|L1.1364|
000512  7812              LDRB     r2,[r2,#0]  ; VK2C23B_segi
000514  5c89              LDRB     r1,[r1,r2]
000516  1f09              SUBS     r1,r1,#4
000518  b2c8              UXTB     r0,r1
00051a  490f              LDR      r1,|L1.1368|
00051c  7809              LDRB     r1,[r1,#0]  ; VK2C23B_comi
00051e  f7fffffe          BL       VK2C23B_DisDotOn
000522  480d              LDR      r0,|L1.1368|
000524  7800              LDRB     r0,[r0,#0]            ;547  ; VK2C23B_comi
000526  1c40              ADDS     r0,r0,#1              ;547
000528  490b              LDR      r1,|L1.1368|
00052a  7008              STRB     r0,[r1,#0]            ;547
                  |L1.1324|
00052c  480a              LDR      r0,|L1.1368|
00052e  7800              LDRB     r0,[r0,#0]            ;547  ; VK2C23B_comi
000530  490b              LDR      r1,|L1.1376|
000532  7809              LDRB     r1,[r1,#0]            ;547  ; VK2C23B_maxcom
000534  4288              CMP      r0,r1                 ;547
000536  dbdc              BLT      |L1.1266|
000538  4806              LDR      r0,|L1.1364|
00053a  7800              LDRB     r0,[r0,#0]            ;545  ; VK2C23B_segi
00053c  1c40              ADDS     r0,r0,#1              ;545
00053e  4905              LDR      r1,|L1.1364|
000540  7008              STRB     r0,[r1,#0]            ;545
                  |L1.1346|
000542  4804              LDR      r0,|L1.1364|
000544  7800              LDRB     r0,[r0,#0]            ;545  ; VK2C23B_segi
000546  2823              CMP      r0,#0x23              ;545
000548  dbcf              BLT      |L1.1258|
;;;552    			}
;;;553    		}
;;;554    		delay_nms(1000);					  //延时
00054a  f44f707a          MOV      r0,#0x3e8
00054e  f7fffffe          BL       delay_nms
                  |L1.1362|
000552  e748              B        |L1.998|
;;;555    	}
;;;556    }
;;;557    /************************END OF FILE****/
                          ENDP

                  |L1.1364|
                          DCD      VK2C23B_segi
                  |L1.1368|
                          DCD      VK2C23B_comi
                  |L1.1372|
                          DCD      VK2C23B_segtab
                  |L1.1376|
                          DCD      VK2C23B_maxcom

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  VK2C23B_dispram
                          %        35
                  VK2C23B_readbuf
                          %        35

                          AREA ||.data||, DATA, ALIGN=0

                  VK2C23B_segtab
000000  04050607          DCB      0x04,0x05,0x06,0x07
000004  08090a0b          DCB      0x08,0x09,0x0a,0x0b
000008  0c0d0e0f          DCB      0x0c,0x0d,0x0e,0x0f
00000c  10111213          DCB      0x10,0x11,0x12,0x13
000010  14151617          DCB      0x14,0x15,0x16,0x17
000014  18191a1b          DCB      0x18,0x19,0x1a,0x1b
000018  1c1d1e1f          DCB      0x1c,0x1d,0x1e,0x1f
00001c  20212223          DCB      0x20,0x21,0x22,0x23
000020  242526            DCB      0x24,0x25,0x26
                  VK2C23B_segi
000023  00                DCB      0x00
                  VK2C23B_comi
000024  00                DCB      0x00
                  VK2C23B_maxcom
000025  00                DCB      0x00

;*** Start embedded assembler ***

#line 1 "..\\lcd_driver\\VK2C23B_IO_I2C_QUASI.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___22_VK2C23B_IO_I2C_QUASI_c_d02620bb____REV16|
#line 114 "..\\..\\..\\Library\\CMSIS\\Include\\core_cmInstr.h"
|__asm___22_VK2C23B_IO_I2C_QUASI_c_d02620bb____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___22_VK2C23B_IO_I2C_QUASI_c_d02620bb____REVSH|
#line 128
|__asm___22_VK2C23B_IO_I2C_QUASI_c_d02620bb____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
